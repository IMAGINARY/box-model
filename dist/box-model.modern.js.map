{"version":3,"file":"box-model.modern.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export function euler(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp: number[] = new Array(n) as number[];\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","import {\n  Flow,\n  Variable,\n  BoxModel,\n  BoxModelOptions,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: (number | boolean)[];\n}\n\ntype FlowGetter = (y: ReadonlyArray<number>, x: number) => number[];\n\nfunction sum(arr: Array<number>) {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\nexport default class BoxModelEngine {\n  public model: BoxModel;\n\n  public integrator: IVPIntegrator;\n\n  constructor(model: BoxModel, options: BoxModelOptions = { integrator: rk4 }) {\n    this.model = model;\n    this.integrator = options.integrator;\n  }\n\n  public static createIdToIdxMap(\n    arr: ReadonlyArray<{ readonly id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce(\n      (acc, { id }, idx) => Object.assign(acc, { [id]: idx }),\n      {}\n    );\n  }\n\n  public evaluateGraph(stocks: ReadonlyArray<number>, t: number): Record {\n    const stockIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.stocks);\n    const s: LookupFunction = (id) => stocks[stockIdToIdx[id]];\n\n    const parameterIdToIdx = BoxModelEngine.createIdToIdxMap(\n      this.model.parameters\n    );\n    const parameters = this.model.parameters.map(({ value }) => value);\n    const p: LookupFunction = (id) => parameters[parameterIdToIdx[id]];\n\n    let f: LookupFunctionWithData;\n    let v: LookupFunctionWithData;\n\n    const buildEvaluator = (\n      items: ReadonlyArray<Flow> | ReadonlyArray<Variable>\n    ): LookupFunctionWithData => {\n      const idToIdx = BoxModelEngine.createIdToIdxMap(items);\n      const data: (number | boolean)[] = items.map(() => false);\n      const evaluator = (id: string) => {\n        const idx = idToIdx[id];\n        if (typeof data[idx] === 'boolean') {\n          // not initialized yet\n          if (data[idx]) {\n            throw new Error(`Evaluation cycle detected starting at: ${id}`);\n          } else {\n            data[idx] = true; // guard the element for cycle detection\n            data[idx] = items[idx].formula(s, f, v, p, t);\n            return data[idx] as number;\n          }\n        } else {\n          return data[idx] as number;\n        }\n      };\n      evaluator.data = data;\n      return evaluator;\n    };\n\n    v = buildEvaluator(this.model.variables);\n\n    f = buildEvaluator(this.model.flows);\n\n    this.model.variables.forEach(({ id }) => v(id));\n    this.model.flows.forEach(({ id }) => f(id));\n\n    return {\n      stocks: stocks as number[],\n      flows: f.data as number[],\n      variables: v.data as number[],\n      parameters,\n      t,\n    };\n  }\n\n  public step(stocksAtT: ReadonlyArray<number>, t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.step3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new SyntaxError();\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows: FlowGetter = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows: FlowGetter = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: FlowGetter,\n    t: number,\n    h: number\n  ): number[] {\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.flows);\n\n    const derivatives = (y: ReadonlyArray<number>, x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[flowIdToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.model.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new SyntaxError();\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n}\n\nexport { BoxModelEngine };\n"],"names":["euler","y","x","h","derivatives","dydx","map","yi","i","rk4","n","length","yTemp","Array","h2","h6","xhh","dydxTemp","dydxM","_","BoxModelEngine","constructor","model","options","integrator","this","[object Object]","arr","reduce","acc","id","idx","Object","assign","evaluateGraph","stocks","t","stockIdToIdx","createIdToIdxMap","s","parameterIdToIdx","parameters","value","p","f","v","buildEvaluator","items","idToIdx","data","evaluator","Error","formula","variables","flows","forEach","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","SyntaxError","stepImpl","flowsAtT","getFlows","flowIdToIdx","addFlows","flowIds","cur","in","out","stepExt","stepExt3","stepExt4"],"mappings":"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"}