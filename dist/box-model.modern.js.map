{"version":3,"file":"box-model.modern.js","sources":["../src/ode.ts","../src/util.ts","../src/box-model.ts"],"sourcesContent":["export function euler(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp: number[] = new Array(n) as number[];\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","export function sum(arr: Array<number>): number {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst hasOwnPropertyFunc = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(\n  o: Record<string, unknown>,\n  key: string\n): boolean {\n  return hasOwnPropertyFunc.call(o, key);\n}\n","import {\n  BoxModel,\n  BoxModelOptions,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\nimport { sum, hasOwnProperty } from './util';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: (number | boolean)[];\n}\n\ntype FlowGetter = (\n  y: ReadonlyArray<number>,\n  x: number\n) => ReadonlyArray<number>;\n\nfunction throwLookupError(tableName: string, id: string) {\n  throw new Error(\n    `Value of unknown ${tableName} requested: ${id}. Check your box model definition.`\n  );\n}\n\ntype ConvergenceCriterion = (\n  r: Record,\n  rPrevious: Record,\n  i: number,\n  bme: BoxModelEngine\n) => boolean;\n\nexport default class BoxModelEngine {\n  public model: BoxModel;\n\n  public integrator: IVPIntegrator;\n\n  constructor(model: BoxModel, options: BoxModelOptions = { integrator: rk4 }) {\n    this.model = model;\n    this.integrator = options.integrator;\n  }\n\n  public static createIdToIdxMap(arr: ReadonlyArray<{ readonly id: string }>): {\n    [key: string]: number;\n  } {\n    return arr.reduce((acc: { [key: string]: number }, { id }, idx) => {\n      acc[id] = idx;\n      return acc;\n    }, {});\n  }\n\n  public createGraphEvaluator(): (\n    stocks: ReadonlyArray<number>,\n    t: number\n  ) => Record {\n    const { stocks: ms, flows: mf, variables: mv, parameters: mp } = this.model;\n\n    const stockIdToIdx = BoxModelEngine.createIdToIdxMap(ms);\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(mf);\n    const variableIdToIdx = BoxModelEngine.createIdToIdxMap(mv);\n    const parameterIdToIdx = BoxModelEngine.createIdToIdxMap(mp);\n\n    let r: Record = {\n      t: 0,\n      stocks: new Array(ms.length) as number[],\n      flows: new Array(mf.length) as number[],\n      variables: new Array(mv.length) as number[],\n      parameters: new Array(mp.length) as number[],\n    };\n\n    const flowInitializing = new Array(mf.length) as boolean[];\n    const variableInitializing = new Array(mv.length) as boolean[];\n\n    const s: LookupFunction = (id) => {\n      if (!hasOwnProperty(stockIdToIdx, id)) throwLookupError('stock', id);\n      return r.stocks[stockIdToIdx[id]];\n    };\n\n    const p: LookupFunction = (id) => {\n      if (!hasOwnProperty(parameterIdToIdx, id))\n        throwLookupError('parameter', id);\n      return r.parameters[parameterIdToIdx[id]];\n    };\n\n    let v: LookupFunction;\n\n    const f: LookupFunction = (id) => {\n      if (!hasOwnProperty(flowIdToIdx, id)) throwLookupError('variable', id);\n      const idx = flowIdToIdx[id];\n      if (r.flows[idx] === undefined) {\n        // not initialized yet\n        if (flowInitializing[idx]) {\n          throw new Error(`Evaluation cycle detected starting at: flow ${id}`);\n        } else {\n          flowInitializing[idx] = true; // guard the element for cycle detection\n          r.flows[idx] = mf[idx].formula({ s, f, v, p, t: r.t });\n        }\n      }\n      return r.flows[idx];\n    };\n\n    v = (id) => {\n      if (!hasOwnProperty(variableIdToIdx, id))\n        throwLookupError('variable', id);\n      const idx = variableIdToIdx[id];\n      if (r.variables[idx] === undefined) {\n        // not initialized yet\n        if (variableInitializing[idx]) {\n          throw new Error(\n            `Evaluation cycle detected starting at: variable ${id}`\n          );\n        } else {\n          variableInitializing[idx] = true; // guard the element for cycle detection\n          r.variables[idx] = mv[idx].formula({ s, f, v, p, t: r.t });\n        }\n      }\n      return r.variables[idx];\n    };\n\n    const evaluator = (stocks: ReadonlyArray<number>, t: number): Record => {\n      r = {\n        t,\n        stocks: stocks as number[],\n        flows: new Array(mf.length) as number[],\n        variables: new Array(mv.length) as number[],\n        parameters: mp.map(({ value }) => value),\n      };\n\n      flowInitializing.fill(false);\n      variableInitializing.fill(false);\n\n      this.model.variables.forEach(({ id }) => v(id));\n      this.model.flows.forEach(({ id }) => f(id));\n\n      return r;\n    };\n\n    return evaluator;\n  }\n\n  public evaluateGraph(stocks: ReadonlyArray<number>, t: number): Record {\n    return this.createGraphEvaluator()(stocks, t);\n  }\n\n  public step(stocksAtT: ReadonlyArray<number>, t: number, h: number): number[];\n  public step(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: ReadonlyArray<number>,\n    tOrFlowsAtT: ReadonlyArray<number> | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.step3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private step3(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[] {\n    const evaluateGraph = this.createGraphEvaluator();\n    const getFlows: FlowGetter = (y, x) => evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[] {\n    const evaluateGraph = this.createGraphEvaluator();\n    const getFlows: FlowGetter = (y, x) =>\n      x === t ? flowsAtT : evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: ReadonlyArray<number>,\n    getFlows: FlowGetter,\n    t: number,\n    h: number\n  ): number[] {\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.flows);\n\n    const derivatives = (y: ReadonlyArray<number>, x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[flowIdToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.model.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    tOrFlowsAtT: ReadonlyArray<number> | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private stepExt3(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  private stepExt4(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  public converge(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number,\n    criteria: ConvergenceCriterion\n  ): number[] {\n    return this.convergeExt(stocksAtT, t, h, criteria).stocks;\n  }\n\n  public convergeExt(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number,\n    criterion: ConvergenceCriterion\n  ): Record {\n    const evaluateGraph = this.createGraphEvaluator();\n    let lastRecord = evaluateGraph(stocksAtT, t);\n    const getFlows: FlowGetter = (y, x) =>\n      x === lastRecord.t ? lastRecord.flows : evaluateGraph(y, x).flows;\n    for (let i = 0, stop = false; !stop; i += 1) {\n      const stocks = this.stepImpl(\n        lastRecord.stocks,\n        getFlows,\n        lastRecord.t,\n        h\n      );\n      const record = evaluateGraph(stocks, t + i * h);\n      stop = criterion(record, lastRecord, i, this);\n      lastRecord = record;\n    }\n    return lastRecord;\n  }\n}\n\nexport { BoxModelEngine, ConvergenceCriterion };\n"],"names":["euler","y","x","h","derivatives","dydx","map","yi","i","rk4","n","length","yTemp","Array","h2","h6","xhh","dydxTemp","dydxM","_","hasOwnPropertyFunc","Object","prototype","hasOwnProperty","o","key","call","throwLookupError","tableName","id","Error","BoxModelEngine","constructor","model","options","integrator","this","static","arr","reduce","acc","idx","createGraphEvaluator","stocks","ms","flows","mf","variables","mv","parameters","mp","stockIdToIdx","createIdToIdxMap","flowIdToIdx","variableIdToIdx","parameterIdToIdx","r","t","flowInitializing","variableInitializing","s","p","v","f","undefined","formula","value","fill","forEach","evaluateGraph","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","TypeError","stepImpl","flowsAtT","getFlows","addFlows","flowIds","cur","in","out","stepExt","stepExt3","stepExt4","converge","criteria","convergeExt","criterion","lastRecord","stop","record"],"mappings":"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"}