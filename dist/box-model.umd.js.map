{"version":3,"file":"box-model.umd.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export function euler(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp: number[] = new Array(n) as number[];\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","import {\n  Flow,\n  Variable,\n  BoxModel,\n  BoxModelOptions,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: (number | boolean)[];\n}\n\ntype FlowGetter = (y: ReadonlyArray<number>, x: number) => number[];\n\nfunction sum(arr: Array<number>) {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\nexport default class BoxModelEngine {\n  public model: BoxModel;\n\n  public integrator: IVPIntegrator;\n\n  constructor(model: BoxModel, options: BoxModelOptions = { integrator: rk4 }) {\n    this.model = model;\n    this.integrator = options.integrator;\n  }\n\n  public static createIdToIdxMap(\n    arr: ReadonlyArray<{ readonly id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce(\n      (acc, { id }, idx) => Object.assign(acc, { [id]: idx }),\n      {}\n    );\n  }\n\n  public evaluateGraph(stocks: ReadonlyArray<number>, t: number): Record {\n    const stockIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.stocks);\n    const s: LookupFunction = (id) => stocks[stockIdToIdx[id]];\n\n    const parameterIdToIdx = BoxModelEngine.createIdToIdxMap(\n      this.model.parameters\n    );\n    const parameters = this.model.parameters.map(({ value }) => value);\n    const p: LookupFunction = (id) => parameters[parameterIdToIdx[id]];\n\n    let f: LookupFunctionWithData;\n    let v: LookupFunctionWithData;\n\n    const buildEvaluator = (\n      items: ReadonlyArray<Flow> | ReadonlyArray<Variable>\n    ): LookupFunctionWithData => {\n      const idToIdx = BoxModelEngine.createIdToIdxMap(items);\n      const data: (number | boolean)[] = items.map(() => false);\n      const evaluator = (id: string) => {\n        const idx = idToIdx[id];\n        if (typeof data[idx] === 'boolean') {\n          // not initialized yet\n          if (data[idx]) {\n            throw new Error(`Evaluation cycle detected starting at: ${id}`);\n          } else {\n            data[idx] = true; // guard the element for cycle detection\n            data[idx] = items[idx].formula(s, f, v, p, t);\n            return data[idx] as number;\n          }\n        } else {\n          return data[idx] as number;\n        }\n      };\n      evaluator.data = data;\n      return evaluator;\n    };\n\n    v = buildEvaluator(this.model.variables);\n\n    f = buildEvaluator(this.model.flows);\n\n    this.model.variables.forEach(({ id }) => v(id));\n    this.model.flows.forEach(({ id }) => f(id));\n\n    return {\n      stocks: stocks as number[],\n      flows: f.data as number[],\n      variables: v.data as number[],\n      parameters,\n      t,\n    };\n  }\n\n  public step(stocksAtT: ReadonlyArray<number>, t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.step3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new SyntaxError();\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows: FlowGetter = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows: FlowGetter = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: FlowGetter,\n    t: number,\n    h: number\n  ): number[] {\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.flows);\n\n    const derivatives = (y: ReadonlyArray<number>, x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[flowIdToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.model.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new SyntaxError();\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n}\n\nexport { BoxModelEngine };\n"],"names":["rk4","y","x","h","derivatives","n","length","dydx","yTemp","Array","h2","h6","xhh","i","dydxTemp","dydxM","map","_","model","options","integrator","this","createIdToIdxMap","arr","reduce","acc","idx","Object","assign","id","evaluateGraph","stocks","t","f","v","stockIdToIdx","BoxModelEngine","s","parameterIdToIdx","parameters","value","p","buildEvaluator","items","idToIdx","data","evaluator","Error","formula","variables","flows","forEach","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","SyntaxError","stepImpl","_this","flowsAtT","_this2","getFlows","flowIdToIdx","addFlows","flowIds","cur","_this3","out","stepExt","stepExt3","stepExt4","yi"],"mappings":"2OAUgBA,EACdC,EACAC,EACAC,EACAC,GAWA,IATA,IAAMC,EAAYJ,EAAEK,OAEdC,EAAOH,EAAYH,EAAGC,GACtBM,EAAkB,IAAIC,MAAMJ,GAE5BK,EAAKP,EAAI,EACTQ,EAAKR,EAAI,EACTS,EAAMV,EAAIQ,EAEPG,EAAI,EAAGA,EAAIR,EAAGQ,GAAK,EAAGL,EAAMK,GAAKZ,EAAEY,GAAKH,EAAKH,EAAKM,GAG3D,IAFA,IAAIC,EAAWV,EAAYI,EAAOI,GAEzBC,EAAI,EAAGA,EAAIR,EAAGQ,GAAK,EAAGL,EAAMK,GAAKZ,EAAEY,GAAKH,EAAKI,EAASD,GAG/D,IAFA,IAAME,EAAQX,EAAYI,EAAOI,GAExBC,EAAI,EAAGA,EAAIR,EAAGQ,GAAK,EAC1BL,EAAMK,GAAKZ,EAAEY,GAAKV,EAAIY,EAAMF,GAC5BE,EAAMF,IAAMC,EAASD,GAIvB,OAFAC,EAAWV,EAAYI,EAAON,EAAIC,GAE3BF,EAAEe,IAAI,SAACC,EAAGJ,UAAMZ,EAAEY,GAAKF,GAAMJ,EAAKM,GAAKC,EAASD,GAAK,EAAME,EAAMF,kCCVxE,WAAYK,EAAiBC,YAAAA,IAAAA,EAA2B,CAAEC,WAAYpB,IACpEqB,KAAKH,MAAQA,EACbG,KAAKD,WAAaD,EAAQC,aAGdE,iBAAP,SACLC,GAEA,OAAOA,EAAIC,OACT,SAACC,IAAaC,gBAAQC,OAAOC,OAAOH,YAA5BI,IAAyCH,OACjD,gCAIGI,cAAA,SAAcC,EAA+BC,GAClD,IASIC,EACAC,EAVEC,EAAeC,EAAed,iBAAiBD,KAAKH,MAAMa,QAC1DM,EAAoB,SAACR,UAAOE,EAAOI,EAAaN,KAEhDS,EAAmBF,EAAed,iBACtCD,KAAKH,MAAMqB,YAEPA,EAAalB,KAAKH,MAAMqB,WAAWvB,IAAI,qBAAGwB,QAC1CC,EAAoB,SAACZ,UAAOU,EAAWD,EAAiBT,KAKxDa,EAAiB,SACrBC,GAEA,IAAMC,EAAUR,EAAed,iBAAiBqB,GAC1CE,EAA6BF,EAAM3B,IAAI,sBACvC8B,EAAY,SAACjB,GACjB,IAAMH,EAAMkB,EAAQf,GACpB,GAAyB,kBAAdgB,EAAKnB,GAAoB,CAElC,GAAImB,EAAKnB,GACP,UAAUqB,gDAAgDlB,GAI1D,OAFAgB,EAAKnB,IAAO,EACZmB,EAAKnB,GAAOiB,EAAMjB,GAAKsB,QAAQX,EAAGJ,EAAGC,EAAGO,EAAGT,GACpCa,EAAKnB,GAGd,OAAOmB,EAAKnB,IAIhB,OADAoB,EAAUD,KAAOA,EACVC,GAUT,OAPAZ,EAAIQ,EAAerB,KAAKH,MAAM+B,WAE9BhB,EAAIS,EAAerB,KAAKH,MAAMgC,OAE9B7B,KAAKH,MAAM+B,UAAUE,QAAQ,mBAAYjB,IAATL,MAChCR,KAAKH,MAAMgC,MAAMC,QAAQ,mBAAYlB,IAATJ,MAErB,CACLE,OAAQA,EACRmB,MAAOjB,EAAEY,KACTI,UAAWf,EAAEW,KACbN,WAAAA,EACAP,EAAAA,MAWGoB,KAAA,SACLC,EACAC,EACAC,EACApD,GAEA,GAA2B,iBAAhBmD,EACT,YAAYE,MAAMH,EAAWC,EAAaC,GAC5C,QAAiB,IAANpD,EACT,YAAYsD,MAAMJ,EAAWC,EAAaC,EAAMpD,GAClD,UAAUuD,eAGJF,MAAA,SAAMH,EAAqBrB,EAAW7B,cAE5C,YAAYwD,SAASN,EADQ,SAACpD,EAAGC,UAAM0D,EAAK9B,cAAc7B,EAAGC,GAAGgD,OACtBlB,EAAG7B,MAGvCsD,MAAA,SACNJ,EACAQ,EACA7B,EACA7B,cAIA,YAAYwD,SAASN,EAFQ,SAACpD,EAAGC,UAC/BA,IAAM8B,EAAI6B,EAAWC,EAAKhC,cAAc7B,EAAGC,GAAGgD,OACNlB,EAAG7B,MAGrCwD,SAAA,SACRN,EACAU,EACA/B,EACA7B,cAEM6D,EAAc5B,EAAed,iBAAiBD,KAAKH,MAAMgC,OAW/D,YAAY9B,WAAWiC,EAAWrB,EAAG7B,EATjB,SAACF,EAA0BC,GAC7C,IAAMgD,EAAQa,EAAS9D,EAAGC,GAEpB+B,EAAoB,SAACJ,UAAeqB,EAAMc,EAAYnC,KACtDoC,EAAW,SAACC,UAAuCA,EAAQlD,IAAIiB,GA3H9DT,OAAO,SAACC,EAAK0C,UAAQ1C,EAAM0C,GAAK,IA6HvC,OAAOC,EAAKlD,MAAMa,OAAOf,IAAI,SAACqB,UAAM4B,EAAS5B,MAAQ4B,EAAS5B,EAAEgC,YAa7DC,QAAA,SACLjB,EACAC,EACAC,EACApD,GAEA,GAA2B,iBAAhBmD,EACT,YAAYiB,SAASlB,EAAWC,EAAaC,GAC/C,QAAiB,IAANpD,EACT,YAAYqE,SAASnB,EAAWC,EAAaC,EAAMpD,GACrD,UAAUuD,eAGJa,SAAA,SAASlB,EAAqBrB,EAAW7B,GAC/C,IAAM4B,EAASV,KAAK+B,KAAKC,EAAWrB,EAAG7B,GACvC,YAAY2B,cAAcC,EAAQC,EAAI7B,MAGhCqE,SAAA,SACNnB,EACAQ,EACA7B,EACA7B,GAEA,IAAM4B,EAASV,KAAK+B,KAAKC,EAAWQ,EAAU7B,EAAG7B,GACjD,YAAY2B,cAAcC,EAAQC,EAAI7B,0BDrLxCF,EACAC,EACAC,EACAC,GAEA,IAAMG,EAAOH,EAAYH,EAAGC,GAC5B,OAAOD,EAAEe,IAAI,SAACyD,EAAI5D,UAAM4D,EAAKtE,EAAII,EAAKM"}