{"version":3,"file":"box-model.umd.js","sources":["../src/ode.ts","../src/util.ts","../src/box-model.ts"],"sourcesContent":["export function euler(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4(\n  y: ReadonlyArray<number>,\n  x: number,\n  h: number,\n  derivatives: (y: ReadonlyArray<number>, x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp: number[] = new Array(n) as number[];\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","export function sum(arr: Array<number>): number {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst hasOwnPropertyFunc = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(\n  o: Record<string, unknown>,\n  key: string\n): boolean {\n  return hasOwnPropertyFunc.call(o, key);\n}\n","import {\n  BoxModel,\n  BoxModelOptions,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\nimport { sum, hasOwnProperty } from './util';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: (number | boolean)[];\n}\n\ntype FlowGetter = (\n  y: ReadonlyArray<number>,\n  x: number\n) => ReadonlyArray<number>;\n\nfunction throwLookupError(tableName: string, id: string) {\n  throw new Error(\n    `Value of unknown ${tableName} requested: ${id}. Check your box model definition.`\n  );\n}\n\nexport default class BoxModelEngine {\n  public model: BoxModel;\n\n  public integrator: IVPIntegrator;\n\n  constructor(model: BoxModel, options: BoxModelOptions = { integrator: rk4 }) {\n    this.model = model;\n    this.integrator = options.integrator;\n  }\n\n  public static createIdToIdxMap(\n    arr: ReadonlyArray<{ readonly id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce((acc: { [key: string]: number }, { id }, idx) => {\n      acc[id] = idx;\n      return acc;\n    }, {});\n  }\n\n  public evaluateGraph(stocks: ReadonlyArray<number>, t: number): Record {\n    const stockIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.stocks);\n    const s: LookupFunction = (id) => {\n      if (!hasOwnProperty(stockIdToIdx, id)) throwLookupError('stock', id);\n      return stocks[stockIdToIdx[id]];\n    };\n\n    const parameterIdToIdx = BoxModelEngine.createIdToIdxMap(\n      this.model.parameters\n    );\n    const parameters = this.model.parameters.map(({ value }) => value);\n    const p: LookupFunction = (id) => {\n      if (!hasOwnProperty(parameterIdToIdx, id))\n        throwLookupError('parameter', id);\n      return parameters[parameterIdToIdx[id]];\n    };\n\n    const [f, v] = [\n      { items: this.model.flows, name: 'flow' },\n      { items: this.model.variables, name: 'variable' },\n    ].map(\n      ({ items, name }): LookupFunctionWithData => {\n        // build graph evaluator functions\n        const idToIdx = BoxModelEngine.createIdToIdxMap(items);\n        const data: (number | boolean)[] = items.map(() => false);\n        const evaluator = (id: string) => {\n          if (!hasOwnProperty(idToIdx, id)) throwLookupError(name, id);\n          const idx = idToIdx[id];\n          if (typeof data[idx] === 'boolean') {\n            // not initialized yet\n            if (data[idx]) {\n              throw new Error(`Evaluation cycle detected starting at: ${id}`);\n            } else {\n              data[idx] = true; // guard the element for cycle detection\n              data[idx] = items[idx].formula(s, f, v, p, t);\n              return data[idx] as number;\n            }\n          } else {\n            return data[idx] as number;\n          }\n        };\n        evaluator.data = data;\n        return evaluator;\n      }\n    );\n\n    this.model.variables.forEach(({ id }) => v(id));\n    this.model.flows.forEach(({ id }) => f(id));\n\n    return {\n      stocks: stocks as number[],\n      flows: f.data as number[],\n      variables: v.data as number[],\n      parameters,\n      t,\n    };\n  }\n\n  public step(stocksAtT: ReadonlyArray<number>, t: number, h: number): number[];\n  public step(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: ReadonlyArray<number>,\n    tOrFlowsAtT: ReadonlyArray<number> | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.step3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private step3(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows: FlowGetter = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows: FlowGetter = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: ReadonlyArray<number>,\n    getFlows: FlowGetter,\n    t: number,\n    h: number\n  ): number[] {\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.flows);\n\n    const derivatives = (y: ReadonlyArray<number>, x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[flowIdToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.model.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: ReadonlyArray<number>,\n    tOrFlowsAtT: ReadonlyArray<number> | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private stepExt3(\n    stocksAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  private stepExt4(\n    stocksAtT: ReadonlyArray<number>,\n    flowsAtT: ReadonlyArray<number>,\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n}\n\nexport { BoxModelEngine };\n"],"names":["rk4","y","x","h","derivatives","n","length","dydx","yTemp","Array","h2","h6","xhh","i","dydxTemp","dydxM","map","_","hasOwnPropertyFunc","Object","prototype","hasOwnProperty","o","key","call","throwLookupError","tableName","id","Error","model","options","integrator","this","createIdToIdxMap","arr","reduce","acc","idx","_ref","evaluateGraph","BoxModelEngine","stocks","t","stockIdToIdx","s","parameterIdToIdx","parameters","_ref2","value","p","_map","items","flows","name","variables","_ref3","idToIdx","data","evaluator","formula","f","v","forEach","_ref4","_ref5","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","TypeError","_this","stepImpl","flowsAtT","_this2","getFlows","_this3","flowIdToIdx","addFlows","flowIds","sum","cur","out","stepExt","stepExt3","stepExt4","euler","yi"],"mappings":"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"}