function t(t,e,r,o){const s=o(t,e);return t.map((t,e)=>t+r*s[e])}function e(t,e,r,o){const s=t.length,a=o(t,e),n=new Array(s),i=r/2,p=r/6,l=e+i;for(let e=0;e<s;e+=1)n[e]=t[e]+i*a[e];let h=o(n,l);for(let e=0;e<s;e+=1)n[e]=t[e]+i*h[e];const u=o(n,l);for(let e=0;e<s;e+=1)n[e]=t[e]+r*u[e],u[e]+=h[e];return h=o(n,e+r),t.map((e,r)=>t[r]+p*(a[r]+h[r]+2*u[r]))}const r=Object.prototype.hasOwnProperty;function o(t,e){return r.call(t,e)}function s(t,e){throw new Error(`Value of unknown ${t} requested: ${e}. Check your box model definition.`)}class a{constructor(t,r={integrator:e}){this.model=void 0,this.integrator=void 0,this.model=t,this.integrator=r.integrator}static createIdToIdxMap(t){return t.reduce((t,{id:e},r)=>(t[e]=r,t),{})}evaluateGraph(t,e){const r=a.createIdToIdxMap(this.model.stocks),n=e=>(o(r,e)||s("stock",e),t[r[e]]),i=a.createIdToIdxMap(this.model.parameters),p=this.model.parameters.map(({value:t})=>t),l=t=>(o(i,t)||s("parameter",t),p[i[t]]),[h,u]=[{items:this.model.flows,name:"flow"},{items:this.model.variables,name:"variable"}].map(({items:t,name:r})=>{const i=a.createIdToIdxMap(t),p=t.map(()=>!1),c=a=>{o(i,a)||s(r,a);const c=i[a];if("boolean"==typeof p[c]){if(p[c])throw new Error(`Evaluation cycle detected starting at: ${a}`);return p[c]=!0,p[c]=t[c].formula(n,h,u,l,e),p[c]}return p[c]};return c.data=p,c});return this.model.variables.forEach(({id:t})=>u(t)),this.model.flows.forEach(({id:t})=>h(t)),{stocks:t,flows:h.data,variables:u.data,parameters:p,t:e}}step(t,e,r,o){if("number"==typeof e)return this.step3(t,e,r);if(void 0!==o)return this.step4(t,e,r,o);throw new TypeError}step3(t,e,r){return this.stepImpl(t,(t,e)=>this.evaluateGraph(t,e).flows,e,r)}step4(t,e,r,o){return this.stepImpl(t,(t,o)=>o===r?e:this.evaluateGraph(t,o).flows,r,o)}stepImpl(t,e,r,o){const s=a.createIdToIdxMap(this.model.flows);return this.integrator(t,r,o,(t,r)=>{const o=e(t,r),a=t=>o[s[t]],n=t=>t.map(a).reduce((t,e)=>t+e,0);return this.model.stocks.map(t=>n(t.in)-n(t.out))})}stepExt(t,e,r,o){if("number"==typeof e)return this.stepExt3(t,e,r);if(void 0!==o)return this.stepExt4(t,e,r,o);throw new TypeError}stepExt3(t,e,r){const o=this.step(t,e,r);return this.evaluateGraph(o,e+r)}stepExt4(t,e,r,o){const s=this.step(t,e,r,o);return this.evaluateGraph(s,r+o)}}export{a as BoxModelEngine,t as euler,e as rk4};
//# sourceMappingURL=box-model.modern.js.map
