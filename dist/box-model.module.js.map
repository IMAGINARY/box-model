{"version":3,"file":"box-model.module.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["import { NumericArray } from './types';\n\nexport function euler<T extends NumericArray>(\n  y: T,\n  x: number,\n  h: number,\n  derivatives: (y: T, x: number) => T\n): T {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4<T extends NumericArray>(\n  y: T,\n  x: number,\n  h: number,\n  derivatives: (y: T, x: number) => T\n): T {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp = y.map(() => 0);\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","import {\n  Flow,\n  Variable,\n  BoxModel,\n  BoxModelOptions,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: (number | boolean)[];\n}\n\ntype FlowGetter = (y: ReadonlyArray<number>, x: number) => number[];\n\nfunction sum(arr: Array<number>) {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\nexport default class BoxModelEngine {\n  public model: BoxModel;\n\n  public integrator: IVPIntegrator;\n\n  constructor(model: BoxModel, options: BoxModelOptions = { integrator: rk4 }) {\n    this.model = model;\n    this.integrator = options.integrator;\n  }\n\n  public static createIdToIdxMap(\n    arr: ReadonlyArray<{ readonly id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce((acc: { [key: string]: number }, { id }, idx) => {\n      acc[id] = idx;\n      return acc;\n    }, {});\n  }\n\n  public evaluateGraph(stocks: ReadonlyArray<number>, t: number): Record {\n    const stockIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.stocks);\n    const s: LookupFunction = (id) => stocks[stockIdToIdx[id]];\n\n    const parameterIdToIdx = BoxModelEngine.createIdToIdxMap(\n      this.model.parameters\n    );\n    const parameters = this.model.parameters.map(({ value }) => value);\n    const p: LookupFunction = (id) => parameters[parameterIdToIdx[id]];\n\n    let f: LookupFunctionWithData;\n    let v: LookupFunctionWithData;\n\n    const buildEvaluator = (\n      items: ReadonlyArray<Flow> | ReadonlyArray<Variable>\n    ): LookupFunctionWithData => {\n      const idToIdx = BoxModelEngine.createIdToIdxMap(items);\n      const data: (number | boolean)[] = items.map(() => false);\n      const evaluator = (id: string) => {\n        const idx = idToIdx[id];\n        if (typeof data[idx] === 'boolean') {\n          // not initialized yet\n          if (data[idx]) {\n            throw new Error(`Evaluation cycle detected starting at: ${id}`);\n          } else {\n            data[idx] = true; // guard the element for cycle detection\n            data[idx] = items[idx].formula(s, f, v, p, t);\n            return data[idx] as number;\n          }\n        } else {\n          return data[idx] as number;\n        }\n      };\n      evaluator.data = data;\n      return evaluator;\n    };\n\n    v = buildEvaluator(this.model.variables);\n\n    f = buildEvaluator(this.model.flows);\n\n    this.model.variables.forEach(({ id }) => v(id));\n    this.model.flows.forEach(({ id }) => f(id));\n\n    return {\n      stocks: stocks as number[],\n      flows: f.data as number[],\n      variables: v.data as number[],\n      parameters,\n      t,\n    };\n  }\n\n  public step(stocksAtT: ReadonlyArray<number>, t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.step3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows: FlowGetter = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows: FlowGetter = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: FlowGetter,\n    t: number,\n    h: number\n  ): number[] {\n    const flowIdToIdx = BoxModelEngine.createIdToIdxMap(this.model.flows);\n\n    const derivatives = (y: ReadonlyArray<number>, x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[flowIdToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.model.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    if (typeof tOrFlowsAtT === 'number')\n      return this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH);\n    if (typeof h !== 'undefined')\n      return this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n    throw new TypeError();\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return this.evaluateGraph(stocks, t + h);\n  }\n}\n\nexport { BoxModelEngine };\n"],"names":["euler","y","x","h","derivatives","dydx","map","yi","i","rk4","n","length","yTemp","h2","h6","xhh","dydxTemp","dydxM","_","BoxModelEngine","model","options","integrator","this","createIdToIdxMap","arr","reduce","acc","idx","id","evaluateGraph","stocks","t","f","v","stockIdToIdx","s","parameterIdToIdx","parameters","value","p","buildEvaluator","items","idToIdx","data","evaluator","Error","formula","variables","flows","forEach","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","TypeError","stepImpl","_this","flowsAtT","_this2","getFlows","flowIdToIdx","addFlows","flowIds","cur","_this3","out","stepExt","stepExt3","stepExt4"],"mappings":"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"}