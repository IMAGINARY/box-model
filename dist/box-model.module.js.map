{"version":3,"file":"box-model.module.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export type IVPIntegrator = (\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) => number[];\n\nexport function euler(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) {\n  const dydx = derivatives(y, x);\n  return y.map((_, i) => y[i] + h * dydx[i]);\n}\n\nexport function rk4(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yt: number[] = Array(n);\n\n  const hh = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + hh;\n\n  for (let i: number = 0; i < n; i += 1) yt[i] = y[i] + hh * dydx[i];\n  let dyt = derivatives(yt, xhh);\n\n  for (let i: number = 0; i < n; i += 1) yt[i] = y[i] + hh * dyt[i];\n  const dym = derivatives(yt, xhh);\n\n  for (let i: number = 0; i < n; i += 1) {\n    yt[i] = y[i] + h * dym[i];\n    dym[i] += dyt[i];\n  }\n  dyt = derivatives(yt, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dyt[i] + 2.0 * dym[i]));\n}\n","import { IVPIntegrator, euler, rk4 } from './ode';\n\nexport { IVPIntegrator, euler, rk4 };\n\ntype LookupFunction = (id: string) => number;\n\nexport type Equation = (\n  s: LookupFunction,\n  f: LookupFunction,\n  v: LookupFunction,\n  c: LookupFunction,\n  t: number\n) => number;\n\nexport interface Stock {\n  readonly id: string;\n  readonly in: ReadonlyArray<string>;\n  readonly out: ReadonlyArray<string>;\n}\n\nexport interface Flow {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Variable {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Constant {\n  readonly id: string;\n  value: number;\n}\n\nexport interface Record {\n  stocks: number[];\n  flows: number[];\n  variables: number[];\n  constants: number[];\n  t: number;\n}\n\nfunction duplicates(arr: any[]) {\n  return arr.reduce((acc, cur, curIdx, arr) => {\n    if (arr.lastIndexOf(cur) !== curIdx) {\n      arr.push(cur);\n    }\n    return acc;\n  }, []);\n}\n\nfunction sum(a: Array<number>) {\n  return a.reduce((a, c) => a + c, 0);\n}\n\nexport default class BoxModel {\n  public readonly stocks: ReadonlyArray<Stock>;\n  public readonly flows: ReadonlyArray<Flow>;\n  public readonly variables: ReadonlyArray<Variable>;\n  public readonly constants: ReadonlyArray<Constant>;\n  public integrator: IVPIntegrator;\n\n  protected idToIdx: { [key: string]: number };\n\n  constructor(\n    {\n      stocks,\n      flows,\n      variables,\n      constants,\n    }: {\n      stocks: Stock[];\n      flows: Flow[];\n      variables: Variable[];\n      constants: Constant[];\n    },\n    integrator: IVPIntegrator = rk4\n  ) {\n    this.stocks = stocks;\n    this.flows = flows;\n    this.variables = variables;\n    this.constants = constants;\n    this.integrator = integrator;\n\n    this.ensureUniqueIds();\n\n    this.idToIdx = {\n      ...BoxModel.createIdToIdxMap(stocks),\n      ...BoxModel.createIdToIdxMap(variables),\n      ...BoxModel.createIdToIdxMap(constants),\n      ...BoxModel.createIdToIdxMap(flows),\n    };\n  }\n\n  protected ensureUniqueIds() {\n    const ids = []\n      .concat(this.stocks, this.variables, this.constants, this.flows)\n      .map((item) => item.id);\n    const duplicateIds = duplicates(ids);\n    if (duplicateIds.length > 0) {\n      throw new Error(`Duplicate ids found: ${duplicateIds}`);\n    }\n  }\n\n  static createIdToIdxMap(arr: Array<{ id: string }>) {\n    const map = {};\n    arr.forEach(({ id }, i) => (map[id] = i));\n    return map;\n  }\n\n  public evaluateGraph(stocks: number[], t: number): Record {\n    const s = (id) => stocks[this.idToIdx[id]];\n\n    const constants = this.constants.map(({ value }) => value);\n    const c = (id) => constants[this.idToIdx[id]];\n\n    const buildEvaluator = (items) => {\n      const data = new Array(items.length);\n      return {\n        evaluator: (id) => {\n          const idx = this.idToIdx[id];\n          if (data[idx] === null) {\n            throw new Error('Evaluation cycle detected starting at: ${id}');\n          }\n\n          if (typeof data[idx] === 'undefined') {\n            data[idx] = null; // guard the element for cycle detection\n            data[idx] = items[idx].equation(s, f, v, c, t);\n          }\n          return data[idx];\n        },\n        data,\n      };\n    };\n\n    const { evaluator: v, data: variables } = buildEvaluator(this.variables);\n    const { evaluator: f, data: flows } = buildEvaluator(this.flows);\n\n    this.variables.forEach(({ id }) => v(id));\n    this.flows.forEach(({ id }) => f(id));\n\n    return { stocks, flows, variables, constants, t };\n  }\n\n  public step(stocksAtT: number[], t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.step3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: (y: number[], x: number) => number[],\n    t: number,\n    h: number\n  ): number[] {\n    const derivatives = (y: number[], x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f = (id): number => flows[this.idToIdx[id]];\n      const addFlows = (flows) => sum(flows.map(f));\n\n      return this.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n}\n\nexport { BoxModel };\n"],"names":["euler","y","x","h","derivatives","dydx","map","_","i","rk4","n","length","yt","Array","hh","h6","xhh","dyt","dym","BoxModel","integrator","stocks","flows","variables","constants","this","ensureUniqueIds","idToIdx","createIdToIdxMap","duplicateIds","concat","item","id","reduce","acc","cur","curIdx","arr","lastIndexOf","push","Error","forEach","evaluateGraph","t","s","_this","value","c","buildEvaluator","items","data","evaluator","idx","equation","f","v","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","stepImpl","_this2","flowsAtT","_this3","getFlows","_this4","addFlows","a","out","stepExt","stepExt3","stepExt4"],"mappings":"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"}