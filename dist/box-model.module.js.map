{"version":3,"file":"box-model.module.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export function euler(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((yi, i) => yi + h * dydx[i]);\n}\n\nexport function rk4(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yTemp: number[] = new Array(n) as number[];\n\n  const h2 = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + h2;\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydx[i];\n  let dydxTemp = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) yTemp[i] = y[i] + h2 * dydxTemp[i];\n  const dydxM = derivatives(yTemp, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yTemp[i] = y[i] + h * dydxM[i];\n    dydxM[i] += dydxTemp[i];\n  }\n  dydxTemp = derivatives(yTemp, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dydxTemp[i] + 2.0 * dydxM[i]));\n}\n","import {\n  Stock,\n  Flow,\n  Variable,\n  Parameter,\n  LookupFunction,\n  Record,\n  IVPIntegrator,\n} from './types';\n\nimport { rk4 } from './ode';\n\ninterface LookupFunctionWithData extends LookupFunction {\n  data: number[];\n}\n\nfunction duplicates<Type>(arr: Type[]): Type[] {\n  return arr.reduce((acc, cur, curIdx, a) => {\n    if (a.lastIndexOf(cur) !== curIdx) {\n      a.push(cur);\n    }\n    return acc;\n  }, [] as Type[]);\n}\n\nfunction sum(arr: Array<number>) {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\nexport default class BoxModel {\n  public readonly stocks: ReadonlyArray<Stock>;\n\n  public readonly flows: ReadonlyArray<Flow>;\n\n  public readonly variables: ReadonlyArray<Variable>;\n\n  public readonly parameters: ReadonlyArray<Parameter>;\n\n  public integrator: IVPIntegrator;\n\n  protected idToIdx: { [key: string]: number };\n\n  constructor(\n    {\n      stocks,\n      flows,\n      variables,\n      parameters,\n    }: {\n      stocks: Stock[];\n      flows: Flow[];\n      variables: Variable[];\n      parameters: Parameter[];\n    },\n    integrator: IVPIntegrator = rk4\n  ) {\n    this.stocks = stocks;\n    this.flows = flows;\n    this.variables = variables;\n    this.parameters = parameters;\n    this.integrator = integrator;\n\n    this.ensureUniqueIds();\n\n    this.idToIdx = {\n      ...BoxModel.createIdToIdxMap(stocks),\n      ...BoxModel.createIdToIdxMap(variables),\n      ...BoxModel.createIdToIdxMap(parameters),\n      ...BoxModel.createIdToIdxMap(flows),\n    };\n  }\n\n  protected ensureUniqueIds(): void {\n    const ids = ([] as Array<{ id: string }>)\n      .concat(this.stocks, this.variables, this.parameters, this.flows)\n      .map((item) => item.id);\n    const duplicateIds = duplicates(ids);\n    if (duplicateIds.length > 0) {\n      throw new Error(`Duplicate ids found: ${JSON.stringify(duplicateIds)}`);\n    }\n  }\n\n  static createIdToIdxMap(\n    arr: Array<{ id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce(\n      (acc, { id }, idx) => Object.assign(acc, { [id]: idx }),\n      {}\n    );\n  }\n\n  public evaluateGraph(stocks: number[], t: number): Record {\n    const s: LookupFunction = (id) => stocks[this.idToIdx[id]];\n\n    const parameters = this.parameters.map(({ value }) => value);\n    const p: LookupFunction = (id) => parameters[this.idToIdx[id]];\n\n    let f: LookupFunctionWithData;\n    let v: LookupFunctionWithData;\n\n    const buildEvaluator = (\n      items: ReadonlyArray<Flow> | ReadonlyArray<Variable>\n    ): LookupFunctionWithData => {\n      const data = new Array(items.length) as number[];\n      const evaluator = (id: string) => {\n        const idx = this.idToIdx[id];\n        if (data[idx] === null) {\n          throw new Error(`Evaluation cycle detected starting at: ${id}`);\n        }\n\n        if (typeof data[idx] === 'undefined') {\n          data[idx] = null; // guard the element for cycle detection\n          data[idx] = items[idx].formula(s, f, v, p, t);\n        }\n        return data[idx];\n      };\n      evaluator.data = data;\n      return evaluator;\n    };\n\n    v = buildEvaluator(this.variables);\n    const variables = v.data;\n\n    f = buildEvaluator(this.flows);\n    const flows = f.data;\n\n    this.variables.forEach(({ id }) => v(id));\n    this.flows.forEach(({ id }) => f(id));\n\n    return { stocks, flows, variables, parameters, t };\n  }\n\n  public step(stocksAtT: number[], t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.step3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: (y: number[], x: number) => number[],\n    t: number,\n    h: number\n  ): number[] {\n    const derivatives = (y: number[], x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f: LookupFunction = (id): number => flows[this.idToIdx[id]];\n      const addFlows = (flowIds: ReadonlyArray<string>) => sum(flowIds.map(f));\n\n      return this.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n}\n\nexport { BoxModel };\n"],"names":["euler","y","x","h","derivatives","dydx","map","yi","i","rk4","n","length","yTemp","Array","h2","h6","xhh","dydxTemp","dydxM","_","BoxModel","integrator","stocks","flows","variables","parameters","this","ensureUniqueIds","idToIdx","createIdToIdxMap","duplicateIds","concat","item","id","reduce","acc","cur","curIdx","a","lastIndexOf","push","Error","JSON","stringify","arr","idx","Object","assign","evaluateGraph","t","f","v","s","_this","value","p","buildEvaluator","items","data","evaluator","formula","forEach","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","stepImpl","_this2","flowsAtT","_this3","getFlows","_this4","addFlows","flowIds","out","stepExt","stepExt3","stepExt4"],"mappings":"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"}