{"version":3,"file":"box-model.module.js","sources":["../src/ode.ts","../src/box-model.ts"],"sourcesContent":["export type IVPIntegrator = (\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n) => number[];\n\nexport function euler(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n): number[] {\n  const dydx = derivatives(y, x);\n  return y.map((_, i) => y[i] + h * dydx[i]);\n}\n\nexport function rk4(\n  y: number[],\n  x: number,\n  h: number,\n  derivatives: (y: number[], x: number) => number[]\n): number[] {\n  const n: number = y.length;\n\n  const dydx = derivatives(y, x);\n  const yt: number[] = Array(n);\n\n  const hh = h / 2.0;\n  const h6 = h / 6.0;\n  const xhh = x + hh;\n\n  for (let i = 0; i < n; i += 1) yt[i] = y[i] + hh * dydx[i];\n  let dyt = derivatives(yt, xhh);\n\n  for (let i = 0; i < n; i += 1) yt[i] = y[i] + hh * dyt[i];\n  const dym = derivatives(yt, xhh);\n\n  for (let i = 0; i < n; i += 1) {\n    yt[i] = y[i] + h * dym[i];\n    dym[i] += dyt[i];\n  }\n  dyt = derivatives(yt, x + h);\n\n  return y.map((_, i) => y[i] + h6 * (dydx[i] + dyt[i] + 2.0 * dym[i]));\n}\n","import { IVPIntegrator, euler, rk4 } from './ode';\n\nexport { IVPIntegrator, euler, rk4 };\n\ntype LookupFunction = (id: string) => number;\n\nexport type Equation = (\n  s: LookupFunction,\n  f: LookupFunction,\n  v: LookupFunction,\n  c: LookupFunction,\n  t: number\n) => number;\n\nexport interface Stock {\n  readonly id: string;\n  readonly in: ReadonlyArray<string>;\n  readonly out: ReadonlyArray<string>;\n}\n\nexport interface Flow {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Variable {\n  readonly id: string;\n  readonly equation: Equation;\n}\n\nexport interface Constant {\n  readonly id: string;\n  value: number;\n}\n\nexport interface Record {\n  stocks: number[];\n  flows: number[];\n  variables: number[];\n  constants: number[];\n  t: number;\n}\n\nfunction duplicates<Type>(arr: Type[]): Type[] {\n  return arr.reduce((acc, cur, curIdx, a) => {\n    if (a.lastIndexOf(cur) !== curIdx) {\n      a.push(cur);\n    }\n    return acc;\n  }, []);\n}\n\nfunction sum(arr: Array<number>) {\n  return arr.reduce((acc, cur) => acc + cur, 0);\n}\n\nexport default class BoxModel {\n  public readonly stocks: ReadonlyArray<Stock>;\n\n  public readonly flows: ReadonlyArray<Flow>;\n\n  public readonly variables: ReadonlyArray<Variable>;\n\n  public readonly constants: ReadonlyArray<Constant>;\n\n  public integrator: IVPIntegrator;\n\n  protected idToIdx: { [key: string]: number };\n\n  constructor(\n    {\n      stocks,\n      flows,\n      variables,\n      constants,\n    }: {\n      stocks: Stock[];\n      flows: Flow[];\n      variables: Variable[];\n      constants: Constant[];\n    },\n    integrator: IVPIntegrator = rk4\n  ) {\n    this.stocks = stocks;\n    this.flows = flows;\n    this.variables = variables;\n    this.constants = constants;\n    this.integrator = integrator;\n\n    this.ensureUniqueIds();\n\n    this.idToIdx = {\n      ...BoxModel.createIdToIdxMap(stocks),\n      ...BoxModel.createIdToIdxMap(variables),\n      ...BoxModel.createIdToIdxMap(constants),\n      ...BoxModel.createIdToIdxMap(flows),\n    };\n  }\n\n  protected ensureUniqueIds(): void {\n    const ids = []\n      .concat(this.stocks, this.variables, this.constants, this.flows)\n      .map((item) => item.id);\n    const duplicateIds = duplicates(ids);\n    if (duplicateIds.length > 0) {\n      throw new Error(`Duplicate ids found: ${duplicateIds}`);\n    }\n  }\n\n  static createIdToIdxMap(\n    arr: Array<{ id: string }>\n  ): { [key: string]: number } {\n    return arr.reduce(\n      (acc, { id }, idx) => Object.assign(acc, { [id]: idx }),\n      {}\n    );\n  }\n\n  public evaluateGraph(stocks: number[], t: number): Record {\n    const s = (id) => stocks[this.idToIdx[id]];\n\n    const constants = this.constants.map(({ value }) => value);\n    const c = (id) => constants[this.idToIdx[id]];\n\n    let f;\n    let v;\n    const buildEvaluator = (items) => {\n      const data = new Array(items.length);\n      const evaluator = (id) => {\n        const idx = this.idToIdx[id];\n        if (data[idx] === null) {\n          throw new Error(`Evaluation cycle detected starting at: ${id}`);\n        }\n\n        if (typeof data[idx] === 'undefined') {\n          data[idx] = null; // guard the element for cycle detection\n          data[idx] = items[idx].equation(s, f, v, c, t);\n        }\n        return data[idx];\n      };\n      evaluator.data = data;\n      return evaluator;\n    };\n\n    v = buildEvaluator(this.variables);\n    const variables = v.data;\n\n    f = buildEvaluator(this.flows);\n    const flows = f.data;\n\n    this.variables.forEach(({ id }) => v(id));\n    this.flows.forEach(({ id }) => f(id));\n\n    return { stocks, flows, variables, constants, t };\n  }\n\n  public step(stocksAtT: number[], t: number, h: number): number[];\n  public step(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[];\n  public step(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): number[] {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.step3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.step4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private step3(stocksAtT: number[], t: number, h: number): number[] {\n    const getFlows = (y, x) => this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  private step4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): number[] {\n    const getFlows = (y, x) =>\n      x === t ? flowsAtT : this.evaluateGraph(y, x).flows;\n    return this.stepImpl(stocksAtT, getFlows, t, h);\n  }\n\n  protected stepImpl(\n    stocksAtT: number[],\n    getFlows: (y: number[], x: number) => number[],\n    t: number,\n    h: number\n  ): number[] {\n    const derivatives = (y: number[], x: number): number[] => {\n      const flows = getFlows(y, x);\n\n      const f = (id): number => flows[this.idToIdx[id]];\n      const addFlows = (flowIds) => sum(flowIds.map(f));\n\n      return this.stocks.map((s) => addFlows(s.in) - addFlows(s.out));\n    };\n\n    return this.integrator(stocksAtT, t, h, derivatives);\n  }\n\n  public stepExt(stocksAtT: number[], t: number, h: number): Record;\n  public stepExt(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record;\n  public stepExt(\n    stocksAtT: number[],\n    tOrFlowsAtT: number[] | number,\n    tOrH: number,\n    h?: number\n  ): Record {\n    return typeof tOrFlowsAtT === 'number'\n      ? this.stepExt3(stocksAtT, tOrFlowsAtT, tOrH)\n      : this.stepExt4(stocksAtT, tOrFlowsAtT, tOrH, h);\n  }\n\n  private stepExt3(stocksAtT: number[], t: number, h: number): Record {\n    const stocks = this.step(stocksAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n\n  private stepExt4(\n    stocksAtT: number[],\n    flowsAtT: number[],\n    t: number,\n    h: number\n  ): Record {\n    const stocks = this.step(stocksAtT, flowsAtT, t, h);\n    return { stocks, ...this.evaluateGraph(stocks, t + h) };\n  }\n}\n\nexport { BoxModel };\n"],"names":["euler","y","x","h","derivatives","dydx","map","_","i","rk4","n","length","yt","Array","hh","h6","xhh","dyt","dym","BoxModel","integrator","stocks","flows","variables","constants","this","ensureUniqueIds","idToIdx","createIdToIdxMap","duplicateIds","concat","item","id","reduce","acc","cur","curIdx","a","lastIndexOf","push","Error","arr","idx","Object","assign","evaluateGraph","t","f","v","s","_this","value","c","buildEvaluator","items","data","evaluator","equation","forEach","step","stocksAtT","tOrFlowsAtT","tOrH","step3","step4","stepImpl","_this2","flowsAtT","_this3","getFlows","_this4","addFlows","flowIds","out","stepExt","stepExt3","stepExt4"],"mappings":"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"}