{"mappings":"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","sources":["./node_modules/chart.js/dist/chunks/helpers.segment.js","./node_modules/chart.js/dist/chart.esm.js","./node_modules/@imaginary-maths/box-model/dist/box-model.module.js","./src/ts/models/earth-energy-balance-with-ice-loop.ts","./src/ts/main.ts"],"sourcesContent":["/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback, () => {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    return parent[prop];\n  });\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK) {\n  const pointsLen = points.length;\n  let deltaX, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const {x, y} = pointCurrent;\n    if (pointBefore) {\n      deltaX = (x - pointBefore.x) / 3;\n      pointCurrent.cp1x = x - deltaX;\n      pointCurrent.cp1y = y - deltaX * mK[i];\n    }\n    if (pointAfter) {\n      deltaX = (pointAfter.x - x) / 3;\n      pointCurrent.cp2x = x + deltaX;\n      pointCurrent.cp2y = y + deltaX * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points) {\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDeltaX = (pointAfter.x - pointCurrent.x);\n      deltaK[i] = slopeDeltaX !== 0 ? (pointAfter.y - pointCurrent.y) / slopeDeltaX : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = chart.currentDevicePixelRatio = forceRatio || 1;\n  const {canvas, width, height} = chart;\n  canvas.height = height * pixelRatio;\n  canvas.width = width * pixelRatio;\n  chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = height + 'px';\n    canvas.style.width = width + 'px';\n  }\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles([{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(segments, points, segmentOptions);\n}\nfunction doSplitByStyles(segments, points, segmentOptions) {\n  const count = points.length;\n  const result = [];\n  let start = segments[0].start;\n  let i = start;\n  for (const segment of segments) {\n    let prevStyle, style;\n    let prev = points[start % count];\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext({type: 'segment', p0: prev, p1: pt}));\n      if (styleChanged(style, prevStyle)) {\n        result.push({start: start, end: i - 1, loop: segment.loop, style: prevStyle});\n        prevStyle = style;\n        start = i - 1;\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      result.push({start, end: i - 1, loop: segment.loop, style});\n      start = i - 1;\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { merge as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, renderText as V, toFont as W, _toLeftRightCenter as X, _alignStartEnd as Y, overrides as Z, _arrayUnique as _, resolve as a, _capitalize as a0, descriptors as a1, isFunction as a2, _attachContext as a3, _createResolver as a4, _descriptors as a5, mergeIf as a6, uid as a7, debounce as a8, retinaScale as a9, almostWhole as aA, almostEquals as aB, _decimalPlaces as aC, _longestText as aD, _filterBetween as aE, _lookup as aF, getHoverColor as aG, clone$1 as aH, _merger as aI, _mergerIf as aJ, _deprecated as aK, toFontString as aL, splineCurve as aM, splineCurveMonotone as aN, getStyle as aO, fontString as aP, toLineHeight as aQ, PITAU as aR, INFINITY as aS, RAD_PER_DEG as aT, QUARTER_PI as aU, TWO_THIRDS_PI as aV, _angleDiff as aW, clearCanvas as aa, _elementsEqual as ab, getAngleFromPoint as ac, _readValueToProps as ad, _updateBezierControlPoints as ae, _computeSegments as af, _boundSegments as ag, _steppedInterpolation as ah, _bezierInterpolation as ai, _pointInLine as aj, _steppedLineTo as ak, _bezierCurveTo as al, drawPoint as am, addRoundedRectPath as an, toTRBL as ao, toTRBLCorners as ap, _boundSegment as aq, _normalizeAngle as ar, getRtlAdapter as as, overrideTextDirection as at, _textX as au, restoreTextDirection as av, noop as aw, distanceBetweenPoints as ax, _setMinAndMaxByKey as ay, niceNum as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","function t(){return(t=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])}return t}).apply(this,arguments)}function n(t,n,r,e){var i=e(t,n);return t.map(function(t,n){return t+r*i[n]})}function r(t,n,r,e){for(var i=t.length,s=e(t,n),a=new Array(i),o=r/2,u=r/6,c=n+o,f=0;f<i;f+=1)a[f]=t[f]+o*s[f];for(var h=e(a,c),p=0;p<i;p+=1)a[p]=t[p]+o*h[p];for(var d=e(a,c),l=0;l<i;l+=1)a[l]=t[l]+r*d[l],d[l]+=h[l];return h=e(a,n+r),t.map(function(n,r){return t[r]+u*(s[r]+h[r]+2*d[r])})}var e=function(){function n(e,i){var s=e.stocks,a=e.flows,o=e.variables,u=e.constants;void 0===i&&(i=r),this.stocks=s,this.flows=a,this.variables=o,this.constants=u,this.integrator=i,this.ensureUniqueIds(),this.idToIdx=t({},n.createIdToIdxMap(s),n.createIdToIdxMap(o),n.createIdToIdxMap(u),n.createIdToIdxMap(a))}var e=n.prototype;return e.ensureUniqueIds=function(){var t=[].concat(this.stocks,this.variables,this.constants,this.flows).map(function(t){return t.id}).reduce(function(t,n,r,e){return e.lastIndexOf(n)!==r&&e.push(n),t},[]);if(t.length>0)throw new Error(\"Duplicate ids found: \"+JSON.stringify(t))},n.createIdToIdxMap=function(t){return t.reduce(function(t,n,r){var e;return Object.assign(t,((e={})[n.id]=r,e))},{})},e.evaluateGraph=function(t,n){var r,e,i=this,s=function(n){return t[i.idToIdx[n]]},a=this.constants.map(function(t){return t.value}),o=function(t){return a[i.idToIdx[t]]},u=function(t){var a=new Array(t.length),u=function(u){var c=i.idToIdx[u];if(null===a[c])throw new Error(\"Evaluation cycle detected starting at: \"+u);return void 0===a[c]&&(a[c]=null,a[c]=t[c].formula(s,r,e,o,n)),a[c]};return u.data=a,u},c=(e=u(this.variables)).data,f=(r=u(this.flows)).data;return this.variables.forEach(function(t){return e(t.id)}),this.flows.forEach(function(t){return r(t.id)}),{stocks:t,flows:f,variables:c,constants:a,t:n}},e.step=function(t,n,r,e){return\"number\"==typeof n?this.step3(t,n,r):this.step4(t,n,r,e)},e.step3=function(t,n,r){var e=this;return this.stepImpl(t,function(t,n){return e.evaluateGraph(t,n).flows},n,r)},e.step4=function(t,n,r,e){var i=this;return this.stepImpl(t,function(t,e){return e===r?n:i.evaluateGraph(t,e).flows},r,e)},e.stepImpl=function(t,n,r,e){var i=this;return this.integrator(t,r,e,function(t,r){var e=n(t,r),s=function(t){return e[i.idToIdx[t]]},a=function(t){return t.map(s).reduce(function(t,n){return t+n},0)};return i.stocks.map(function(t){return a(t.in)-a(t.out)})})},e.stepExt=function(t,n,r,e){return\"number\"==typeof n?this.stepExt3(t,n,r):this.stepExt4(t,n,r,e)},e.stepExt3=function(n,r,e){var i=this.step(n,r,e);return t({stocks:i},this.evaluateGraph(i,r+e))},e.stepExt4=function(n,r,e,i){var s=this.step(n,r,e,i);return t({stocks:s},this.evaluateGraph(s,e+i))},n}();export{e as BoxModel,n as euler,r as rk4};\n//# sourceMappingURL=box-model.module.js.map\n","import { BoxModelDefinition } from '../box-model-definition';\n\nconst stocks = [\n  {\n    id: 'planet heat content',\n    in: ['sun radiation'],\n    out: ['earth infrared radiation'],\n    initialValue: 1e12,\n  },\n];\n\nconst variables = [\n  {\n    id: 'albedo',\n    formula: (s, f, v, c, t) =>\n      Math.max(0, Math.min(1, 2.8 - 0.01 * v('temperature'))),\n  },\n  {\n    id: 'ice',\n    formula: (s, f, v, c, t) => -323 + 1.5 * v('temperature'),\n  },\n  {\n    id: 'temperature',\n    formula: (s, f, v, c, t) => s('planet heat content') / v('heat capacity'),\n  },\n  {\n    id: 'heat capacity',\n    formula: (s, f, v, c, t) => c('water depth') * 4.2e6,\n  },\n];\n\nconst constants = [\n  {\n    id: 'water depth',\n    value: 1000,\n  },\n  {\n    id: 'solar emissivity',\n    value: 1363,\n  },\n];\n\nconst flows = [\n  {\n    id: 'sun radiation',\n    formula: (s, f, v, c, t) => (c('solar emissivity') * (1 - v('albedo'))) / 4,\n  },\n  {\n    id: 'earth infrared radiation',\n    formula: (s, f, v, c, t) => 5.67e-8 * Math.pow(v('temperature'), 4),\n  },\n];\n\nconst secondsPerYear = 60 * 60 * 24 * 365.2425;\nconst stepSize = secondsPerYear;\n\nconst model: BoxModelDefinition = {\n  stocks,\n  variables,\n  constants,\n  flows,\n  stepSize,\n};\n\nexport default model;\n","import { Chart, ChartTypeRegistry } from 'chart.js';\n\nimport { BoxModel } from './box-model';\nimport m from './models/earth-energy-balance-with-ice-loop';\n\nconst numRecords = 3000;\n\nconst chartData = {\n  labels: Array(numRecords)\n    .fill(null)\n    .map((_, i) => -(numRecords - i - 1)),\n  datasets: [\n    {\n      label: 'Planet heat content',\n      backgroundColor: 'rgb(255, 99, 132)',\n      borderColor: 'rgb(255, 99, 132)',\n      data: Array(numRecords).fill(undefined),\n      cubicInterpolationMode: 'monotone',\n    },\n  ],\n};\nconst chartConfig = {\n  type: 'line' as keyof ChartTypeRegistry,\n  data: chartData,\n  options: {\n    radius: 0,\n    scales: {\n      y: {\n        min: 0.95e12,\n        max: 1.2e12,\n      },\n    },\n  },\n};\n\nconst elem = document.getElementById('chart') as HTMLCanvasElement;\nconst planetHeatContentChart = new Chart(elem, chartConfig);\nconst planetHeadContentIdx = m.stocks.findIndex(\n  ({ id }) => id === 'planet heat content'\n);\n\nconst boxModel = new BoxModel(m);\n\nconst initialStocks = m.stocks.map(({ initialValue }) => initialValue);\nconst initialRecord = boxModel.evaluateGraph(initialStocks, 0);\nlet lastRecord = initialRecord;\nlet t = 0;\n\nfunction addRecords(num = 1) {\n  for (let i = 0; i < num; i += 1) {\n    const { stocks, flows } = lastRecord;\n    lastRecord = boxModel.stepExt(stocks, flows, t * m.stepSize, m.stepSize);\n    t += 1;\n    chartData.datasets[0].data.shift();\n    chartData.datasets[0].data.push(lastRecord.stocks[planetHeadContentIdx]);\n  }\n  planetHeatContentChart.update('resize');\n}\n\nlet requestAnimationFrameId = 0;\n\nfunction animate() {\n  addRecords(20);\n  cancelAnimationFrame(requestAnimationFrameId);\n  requestAnimationFrameId = requestAnimationFrame(animate);\n}\n\nfunction addSlider(parent, constant) {\n  const container = document.createElement('div');\n\n  const titleSpan = document.createElement('span');\n  titleSpan.innerText = constant.id;\n  container.appendChild(titleSpan);\n\n  const slider = document.createElement('input') as HTMLInputElement;\n  slider.type = 'range';\n  slider.min = `${constant.value * 0.75}`;\n  slider.max = `${constant.value * 1.25}`;\n  slider.value = `${constant.value}`;\n  container.append(slider);\n\n  const valueSpan = document.createElement('span');\n  valueSpan.innerText = slider.value;\n  container.append(valueSpan);\n\n  slider.addEventListener('input', () => {\n    const idx = m.constants.findIndex((c) => c.id === constant.id);\n    m.constants[idx].value = Number.parseFloat(slider.value);\n    valueSpan.innerText = slider.value;\n  });\n\n  parent.appendChild(container);\n}\n\nconst sliderContainerElem = document.getElementById('slider-container');\nm.constants.forEach((c) => addSlider(sliderContainerElem, c));\n\nconst startButton = document.getElementById('startButton') as HTMLButtonElement;\nconst stopButton = document.getElementById('stopButton') as HTMLButtonElement;\n\nstartButton.addEventListener('click', () => animate());\n\nstopButton.addEventListener('click', () =>\n  cancelAnimationFrame(requestAnimationFrameId)\n);\n"],"names":["$19e5c0283579a9e3a6329f6c199b265e$export$r","window","callback","requestAnimationFrame","$19e5c0283579a9e3a6329f6c199b265e$export$I","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","$19e5c0283579a9e3a6329f6c199b265e$export$X","align","$19e5c0283579a9e3a6329f6c199b265e$export$Y","start","end","$19e5c0283579a9e3a6329f6c199b265e$export$a7","id","$19e5c0283579a9e3a6329f6c199b265e$export$j","value","$19e5c0283579a9e3a6329f6c199b265e$export$b","isArray","type","Object","toString","substr","$19e5c0283579a9e3a6329f6c199b265e$export$i","$19e5c0283579a9e3a6329f6c199b265e$export$g","Number","isFinite","$19e5c0283579a9e3a6329f6c199b265e$export$M","defaultValue","$19e5c0283579a9e3a6329f6c199b265e$export$v","$19e5c0283579a9e3a6329f6c199b265e$export$o","dimension","endsWith","parseFloat","$19e5c0283579a9e3a6329f6c199b265e$export$N","$19e5c0283579a9e3a6329f6c199b265e$export$D","loopable","reverse","i","len","keys","length","$19e5c0283579a9e3a6329f6c199b265e$export$ab","a0","a1","ilen","v0","v1","datasetIndex","index","$19e5c0283579a9e3a6329f6c199b265e$export$aH","source","map","target","create","klen","k","$19e5c0283579a9e3a6329f6c199b265e$var$isValidKey","key","indexOf","$19e5c0283579a9e3a6329f6c199b265e$export$aI","options","tval","sval","$19e5c0283579a9e3a6329f6c199b265e$export$$","sources","merger","$19e5c0283579a9e3a6329f6c199b265e$export$a6","$19e5c0283579a9e3a6329f6c199b265e$export$aJ","hasOwnProperty","$19e5c0283579a9e3a6329f6c199b265e$var$indexOfDotOrLength","idx","$19e5c0283579a9e3a6329f6c199b265e$export$f","obj","pos","$19e5c0283579a9e3a6329f6c199b265e$export$a0","str","charAt","toUpperCase","$19e5c0283579a9e3a6329f6c199b265e$export$h","$19e5c0283579a9e3a6329f6c199b265e$export$a2","$19e5c0283579a9e3a6329f6c199b265e$export$P","Math","PI","$19e5c0283579a9e3a6329f6c199b265e$export$T","$19e5c0283579a9e3a6329f6c199b265e$export$aR","$19e5c0283579a9e3a6329f6c199b265e$export$aS","POSITIVE_INFINITY","$19e5c0283579a9e3a6329f6c199b265e$export$aT","$19e5c0283579a9e3a6329f6c199b265e$export$H","$19e5c0283579a9e3a6329f6c199b265e$export$aU","$19e5c0283579a9e3a6329f6c199b265e$export$aV","$19e5c0283579a9e3a6329f6c199b265e$export$K","log10","$19e5c0283579a9e3a6329f6c199b265e$export$s","sign","$19e5c0283579a9e3a6329f6c199b265e$export$az","range","niceRange","pow","floor","fraction","$19e5c0283579a9e3a6329f6c199b265e$export$w","n","isNaN","$19e5c0283579a9e3a6329f6c199b265e$export$aB","x","y","epsilon","abs","$19e5c0283579a9e3a6329f6c199b265e$export$ay","array","property","min","max","$19e5c0283579a9e3a6329f6c199b265e$export$t","degrees","$19e5c0283579a9e3a6329f6c199b265e$export$Q","radians","$19e5c0283579a9e3a6329f6c199b265e$export$ax","pt1","pt2","sqrt","$19e5c0283579a9e3a6329f6c199b265e$export$aW","a","b","$19e5c0283579a9e3a6329f6c199b265e$export$ar","$19e5c0283579a9e3a6329f6c199b265e$export$q","angle","s","e","angleToStart","angleToEnd","startToAngle","endToAngle","$19e5c0283579a9e3a6329f6c199b265e$export$x","$19e5c0283579a9e3a6329f6c199b265e$var$atEdge","t","$19e5c0283579a9e3a6329f6c199b265e$var$elasticIn","p","sin","$19e5c0283579a9e3a6329f6c199b265e$var$elasticOut","$19e5c0283579a9e3a6329f6c199b265e$export$e","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","$19e5c0283579a9e3a6329f6c199b265e$var$map","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","f","$19e5c0283579a9e3a6329f6c199b265e$var$hex","$19e5c0283579a9e3a6329f6c199b265e$var$h1","$19e5c0283579a9e3a6329f6c199b265e$var$h2","$19e5c0283579a9e3a6329f6c199b265e$var$eq","$19e5c0283579a9e3a6329f6c199b265e$var$hexString","v","r","g","$19e5c0283579a9e3a6329f6c199b265e$var$isShort","$19e5c0283579a9e3a6329f6c199b265e$var$round","$19e5c0283579a9e3a6329f6c199b265e$var$lim","l","h","$19e5c0283579a9e3a6329f6c199b265e$var$p2b","$19e5c0283579a9e3a6329f6c199b265e$var$n2b","$19e5c0283579a9e3a6329f6c199b265e$var$b2n","$19e5c0283579a9e3a6329f6c199b265e$var$n2p","$19e5c0283579a9e3a6329f6c199b265e$var$RGB_RE","$19e5c0283579a9e3a6329f6c199b265e$var$HUE_RE","$19e5c0283579a9e3a6329f6c199b265e$var$hsl2rgbn","$19e5c0283579a9e3a6329f6c199b265e$var$hsv2rgbn","$19e5c0283579a9e3a6329f6c199b265e$var$hwb2rgbn","w","rgb","$19e5c0283579a9e3a6329f6c199b265e$var$rgb2hsl","$19e5c0283579a9e3a6329f6c199b265e$var$calln","$19e5c0283579a9e3a6329f6c199b265e$var$hsl2rgb","$19e5c0283579a9e3a6329f6c199b265e$var$hue","$19e5c0283579a9e3a6329f6c199b265e$var$hueParse","exec","p1","p2","$19e5c0283579a9e3a6329f6c199b265e$var$hwb2rgb","$19e5c0283579a9e3a6329f6c199b265e$var$hsv2rgb","$19e5c0283579a9e3a6329f6c199b265e$var$map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$19e5c0283579a9e3a6329f6c199b265e$var$names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$19e5c0283579a9e3a6329f6c199b265e$var$names$1","$19e5c0283579a9e3a6329f6c199b265e$var$nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","$19e5c0283579a9e3a6329f6c199b265e$var$unpack","transparent","toLowerCase","$19e5c0283579a9e3a6329f6c199b265e$var$modHSL","ratio","tmp","$19e5c0283579a9e3a6329f6c199b265e$var$clone","proto","assign","$19e5c0283579a9e3a6329f6c199b265e$var$fromObject","input","$19e5c0283579a9e3a6329f6c199b265e$var$functionParse","$19e5c0283579a9e3a6329f6c199b265e$var$rgbParse","$19e5c0283579a9e3a6329f6c199b265e$var$Color","constructor","ret","this","_rgb","_valid","rgbString","hexString","hslString","$19e5c0283579a9e3a6329f6c199b265e$var$hslString","mix","color","weight","me","c1","c2","w2","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$19e5c0283579a9e3a6329f6c199b265e$var$rotate","$19e5c0283579a9e3a6329f6c199b265e$var$index_esm","$19e5c0283579a9e3a6329f6c199b265e$var$isPatternOrGradient","CanvasGradient","CanvasPattern","$19e5c0283579a9e3a6329f6c199b265e$export$c","$19e5c0283579a9e3a6329f6c199b265e$export$aG","$19e5c0283579a9e3a6329f6c199b265e$export$Z","$19e5c0283579a9e3a6329f6c199b265e$export$a1","$19e5c0283579a9e3a6329f6c199b265e$var$getScope$1","node","split","$19e5c0283579a9e3a6329f6c199b265e$var$set","root","scope","values","$19e5c0283579a9e3a6329f6c199b265e$export$d","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","set","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","$19e5c0283579a9e3a6329f6c199b265e$var$Defaults","_scriptable","startsWith","_indexable","_fallback","$19e5c0283579a9e3a6329f6c199b265e$export$R","data","gc","longest","string","textWidth","measureText","width","push","$19e5c0283579a9e3a6329f6c199b265e$export$aD","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","$19e5c0283579a9e3a6329f6c199b265e$export$U","pixel","currentDevicePixelRatio","halfWidth","round","$19e5c0283579a9e3a6329f6c199b265e$export$aa","canvas","getContext","resetTransform","clearRect","height","$19e5c0283579a9e3a6329f6c199b265e$export$am","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","$19e5c0283579a9e3a6329f6c199b265e$export$A","point","area","margin","left","right","top","bottom","$19e5c0283579a9e3a6329f6c199b265e$export$k","clip","$19e5c0283579a9e3a6329f6c199b265e$export$m","$19e5c0283579a9e3a6329f6c199b265e$export$ak","previous","flip","midpoint","$19e5c0283579a9e3a6329f6c199b265e$export$al","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","$19e5c0283579a9e3a6329f6c199b265e$export$V","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","$19e5c0283579a9e3a6329f6c199b265e$export$an","topLeft","bottomLeft","bottomRight","topRight","$19e5c0283579a9e3a6329f6c199b265e$var$LINE_HEIGHT","RegExp","$19e5c0283579a9e3a6329f6c199b265e$var$FONT_STYLE","$19e5c0283579a9e3a6329f6c199b265e$export$aQ","matches","match","$19e5c0283579a9e3a6329f6c199b265e$export$ad","props","objProps","read","prop","$19e5c0283579a9e3a6329f6c199b265e$export$ao","$19e5c0283579a9e3a6329f6c199b265e$export$ap","$19e5c0283579a9e3a6329f6c199b265e$export$C","$19e5c0283579a9e3a6329f6c199b265e$export$W","fallback","console","warn","$19e5c0283579a9e3a6329f6c199b265e$export$aL","$19e5c0283579a9e3a6329f6c199b265e$export$a","inputs","info","cacheable","$19e5c0283579a9e3a6329f6c199b265e$export$aF","table","cmp","mid","hi","lo","$19e5c0283579a9e3a6329f6c199b265e$export$y","$19e5c0283579a9e3a6329f6c199b265e$export$B","$19e5c0283579a9e3a6329f6c199b265e$var$arrayEvents","$19e5c0283579a9e3a6329f6c199b265e$export$u","listener","stub","_chartjs","listeners","forEach","$19e5c0283579a9e3a6329f6c199b265e$export$_","items","Set","add","result","item","$19e5c0283579a9e3a6329f6c199b265e$export$a4","scopes","prefixes","rootScopes","getTarget","$19e5c0283579a9e3a6329f6c199b265e$var$_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","$19e5c0283579a9e3a6329f6c199b265e$var$_cached","proxy","prefix","$19e5c0283579a9e3a6329f6c199b265e$var$readKey","$19e5c0283579a9e3a6329f6c199b265e$var$needsSubResolver","$19e5c0283579a9e3a6329f6c199b265e$var$createSubResolver","$19e5c0283579a9e3a6329f6c199b265e$var$_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","has","$19e5c0283579a9e3a6329f6c199b265e$var$getKeysFromAllScopes","includes","ownKeys","_storage","$19e5c0283579a9e3a6329f6c199b265e$export$a3","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","$19e5c0283579a9e3a6329f6c199b265e$export$a5","setContext","receiver","descriptors","isScriptable","Error","join","delete","$19e5c0283579a9e3a6329f6c199b265e$var$_resolveScriptable","isIndexable","arr","filter","resolver","$19e5c0283579a9e3a6329f6c199b265e$var$_resolveArray","$19e5c0283579a9e3a6329f6c199b265e$var$_resolveWithContext","allKeys","configurable","defaults","scriptable","indexable","_allKeys","resolve","$19e5c0283579a9e3a6329f6c199b265e$var$resolveFallback","$19e5c0283579a9e3a6329f6c199b265e$var$getScope","parent","$19e5c0283579a9e3a6329f6c199b265e$var$addScopes","parentScopes","parentFallback","allScopes","$19e5c0283579a9e3a6329f6c199b265e$var$addScopesFromKey","$19e5c0283579a9e3a6329f6c199b265e$var$resolveKeysFromAllScopes","$19e5c0283579a9e3a6329f6c199b265e$var$EPSILON","EPSILON","$19e5c0283579a9e3a6329f6c199b265e$var$getPoint","points","skip","$19e5c0283579a9e3a6329f6c199b265e$export$aM","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","$19e5c0283579a9e3a6329f6c199b265e$export$aN","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","$19e5c0283579a9e3a6329f6c199b265e$var$monotoneAdjust","deltaX","$19e5c0283579a9e3a6329f6c199b265e$var$monotoneCompute","$19e5c0283579a9e3a6329f6c199b265e$var$capControlPoint","pt","$19e5c0283579a9e3a6329f6c199b265e$export$ae","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","$19e5c0283579a9e3a6329f6c199b265e$var$capBezierPoints","$19e5c0283579a9e3a6329f6c199b265e$export$F","domNode","parentNode","host","$19e5c0283579a9e3a6329f6c199b265e$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$19e5c0283579a9e3a6329f6c199b265e$var$getComputedStyle","element","getComputedStyle","$19e5c0283579a9e3a6329f6c199b265e$var$positions","$19e5c0283579a9e3a6329f6c199b265e$var$getPositionedStyle","styles","suffix","$19e5c0283579a9e3a6329f6c199b265e$export$z","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","$19e5c0283579a9e3a6329f6c199b265e$var$useOffsetPos","getBoundingClientRect","clientX","clientY","$19e5c0283579a9e3a6329f6c199b265e$var$getCanvasPosition","$19e5c0283579a9e3a6329f6c199b265e$var$round1","$19e5c0283579a9e3a6329f6c199b265e$export$E","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","$19e5c0283579a9e3a6329f6c199b265e$var$getContainerSize","$19e5c0283579a9e3a6329f6c199b265e$export$a9","forceRatio","forceStyle","pixelRatio","setTransform","$19e5c0283579a9e3a6329f6c199b265e$export$J","passiveSupported","addEventListener","removeEventListener","$19e5c0283579a9e3a6329f6c199b265e$export$G","el","getPropertyValue","$19e5c0283579a9e3a6329f6c199b265e$export$aO","$19e5c0283579a9e3a6329f6c199b265e$export$aj","$19e5c0283579a9e3a6329f6c199b265e$export$ah","$19e5c0283579a9e3a6329f6c199b265e$export$ai","cp1","cp2","$19e5c0283579a9e3a6329f6c199b265e$var$intlCache","Map","$19e5c0283579a9e3a6329f6c199b265e$export$p","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","$19e5c0283579a9e3a6329f6c199b265e$var$getNumberFormat","format","$19e5c0283579a9e3a6329f6c199b265e$export$as","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","$19e5c0283579a9e3a6329f6c199b265e$var$getRightToLeftAdapter","_itemWidth","$19e5c0283579a9e3a6329f6c199b265e$export$at","direction","original","getPropertyPriority","setProperty","prevTextDirection","$19e5c0283579a9e3a6329f6c199b265e$export$av","$19e5c0283579a9e3a6329f6c199b265e$var$propertyFn","between","compare","normalize","$19e5c0283579a9e3a6329f6c199b265e$var$normalizeSegment","count","$19e5c0283579a9e3a6329f6c199b265e$export$aq","segment","bounds","startBound","endBound","$19e5c0283579a9e3a6329f6c199b265e$var$getSegment","prevValue","inside","subStart","shouldStart","shouldStop","$19e5c0283579a9e3a6329f6c199b265e$export$ag","segments","sub","$19e5c0283579a9e3a6329f6c199b265e$var$splitByStyles","segmentOptions","prevStyle","$19e5c0283579a9e3a6329f6c199b265e$var$readStyle","p0","$19e5c0283579a9e3a6329f6c199b265e$var$styleChanged","$19e5c0283579a9e3a6329f6c199b265e$var$doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","$c9e36027b71b2fbdecd045121a6b2caa$export$animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","$c9e36027b71b2fbdecd045121a6b2caa$var$transparent","$c9e36027b71b2fbdecd045121a6b2caa$var$interpolators","boolean","from","to","factor","c0","valid","number","$c9e36027b71b2fbdecd045121a6b2caa$export$Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","$c9e36027b71b2fbdecd045121a6b2caa$var$animationOptions","colors","properties","$c9e36027b71b2fbdecd045121a6b2caa$var$colors","numbers","$c9e36027b71b2fbdecd045121a6b2caa$var$numbers","resize","show","animations","visible","hide","$c9e36027b71b2fbdecd045121a6b2caa$export$Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","$c9e36027b71b2fbdecd045121a6b2caa$var$resolveTargetOptions","_createAnimations","anim","all","$c9e36027b71b2fbdecd045121a6b2caa$var$awaitAll","then","$c9e36027b71b2fbdecd045121a6b2caa$var$scaleClip","allowedOverflow","$c9e36027b71b2fbdecd045121a6b2caa$var$getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","$c9e36027b71b2fbdecd045121a6b2caa$var$applyStack","stack","dsIndex","singleMode","otherValue","$c9e36027b71b2fbdecd045121a6b2caa$var$isStacked","meta","stacked","$c9e36027b71b2fbdecd045121a6b2caa$var$getOrCreateStack","stacks","stackKey","indexValue","subStack","$c9e36027b71b2fbdecd045121a6b2caa$var$updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","$c9e36027b71b2fbdecd045121a6b2caa$var$getStackKey","$c9e36027b71b2fbdecd045121a6b2caa$var$getFirstScaleId","shift","$c9e36027b71b2fbdecd045121a6b2caa$var$clearStacks","_parsed","$c9e36027b71b2fbdecd045121a6b2caa$var$isDirectUpdateMode","$c9e36027b71b2fbdecd045121a6b2caa$var$cloneIfNotShared","cached","shared","$c9e36027b71b2fbdecd045121a6b2caa$export$DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","$c9e36027b71b2fbdecd045121a6b2caa$var$convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","applyStack","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","$c9e36027b71b2fbdecd045121a6b2caa$var$getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","$c9e36027b71b2fbdecd045121a6b2caa$var$toClip","$c9e36027b71b2fbdecd045121a6b2caa$var$defaultClip","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","$c9e36027b71b2fbdecd045121a6b2caa$var$createDataContext","$c9e36027b71b2fbdecd045121a6b2caa$var$createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","$c9e36027b71b2fbdecd045121a6b2caa$var$computeMinSampleSize","_cache","$bar","metas","getMatchingVisibleMetas","concat","sort","$c9e36027b71b2fbdecd045121a6b2caa$var$getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","$c9e36027b71b2fbdecd045121a6b2caa$var$parseValue","entry","startValue","endValue","barStart","barEnd","_custom","$c9e36027b71b2fbdecd045121a6b2caa$var$parseFloatBar","$c9e36027b71b2fbdecd045121a6b2caa$var$parseArrayOrPrimitive","$c9e36027b71b2fbdecd045121a6b2caa$var$isFloatBar","custom","$c9e36027b71b2fbdecd045121a6b2caa$export$BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","grouped","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","percent","chunk","$c9e36027b71b2fbdecd045121a6b2caa$var$computeFlexCategoryTraits","thickness","$c9e36027b71b2fbdecd045121a6b2caa$var$computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","$c9e36027b71b2fbdecd045121a6b2caa$export$BubbleController","getPixelForDecimal","tooltip","title","$c9e36027b71b2fbdecd045121a6b2caa$export$DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","$c9e36027b71b2fbdecd045121a6b2caa$var$getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","hidden","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","$c9e36027b71b2fbdecd045121a6b2caa$export$LineController","_dataset","animationsDisabled","pointCount","$c9e36027b71b2fbdecd045121a6b2caa$var$getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","$c9e36027b71b2fbdecd045121a6b2caa$var$scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","$c9e36027b71b2fbdecd045121a6b2caa$export$PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","$c9e36027b71b2fbdecd045121a6b2caa$export$PieController","$c9e36027b71b2fbdecd045121a6b2caa$export$RadarController","_fullLoop","pointPosition","getPointPositionForValue","$c9e36027b71b2fbdecd045121a6b2caa$export$ScatterController","$c9e36027b71b2fbdecd045121a6b2caa$var$abstract","$c9e36027b71b2fbdecd045121a6b2caa$var$DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","$c9e36027b71b2fbdecd045121a6b2caa$export$_adapters","_date","$c9e36027b71b2fbdecd045121a6b2caa$var$getRelativePosition","$c9e36027b71b2fbdecd045121a6b2caa$var$binarySearch","metaset","lookupMethod","_reversePixels","getRange","$c9e36027b71b2fbdecd045121a6b2caa$var$optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","$c9e36027b71b2fbdecd045121a6b2caa$var$getIntersectItems","useFinalPosition","_minPadding","inRange","$c9e36027b71b2fbdecd045121a6b2caa$var$getNearestItems","distanceMetric","useX","useY","deltaY","$c9e36027b71b2fbdecd045121a6b2caa$var$getDistanceMetricForAxis","minDistance","getCenterPoint","distance","$c9e36027b71b2fbdecd045121a6b2caa$var$getAxisItems","rangeMethod","intersectsItem","$c9e36027b71b2fbdecd045121a6b2caa$var$evaluateAllVisibleItems","$c9e36027b71b2fbdecd045121a6b2caa$export$Interaction","modes","nearest","$c9e36027b71b2fbdecd045121a6b2caa$var$STATIC_POSITIONS","$c9e36027b71b2fbdecd045121a6b2caa$var$filterByPosition","$c9e36027b71b2fbdecd045121a6b2caa$var$filterDynamicPositionByAxis","$c9e36027b71b2fbdecd045121a6b2caa$var$sortByWeight","$c9e36027b71b2fbdecd045121a6b2caa$var$getCombinedMax","maxPadding","$c9e36027b71b2fbdecd045121a6b2caa$var$updateMaxPadding","boxPadding","$c9e36027b71b2fbdecd045121a6b2caa$var$updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","$c9e36027b71b2fbdecd045121a6b2caa$var$getMargins","marginForPositions","positions","$c9e36027b71b2fbdecd045121a6b2caa$var$fitBoxes","boxes","refitBoxes","refit","fullSize","$c9e36027b71b2fbdecd045121a6b2caa$var$placeBoxes","userPadding","padding","$c9e36027b71b2fbdecd045121a6b2caa$export$layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","$c9e36027b71b2fbdecd045121a6b2caa$var$wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","$c9e36027b71b2fbdecd045121a6b2caa$var$buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","layouts","$c9e36027b71b2fbdecd045121a6b2caa$var$setLayoutDims","updatePos","change","$c9e36027b71b2fbdecd045121a6b2caa$var$handleMaxPadding","$c9e36027b71b2fbdecd045121a6b2caa$export$BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","$c9e36027b71b2fbdecd045121a6b2caa$export$BasicPlatform","$c9e36027b71b2fbdecd045121a6b2caa$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$c9e36027b71b2fbdecd045121a6b2caa$var$isNullOrEmpty","$c9e36027b71b2fbdecd045121a6b2caa$var$eventListenerOptions","passive","$c9e36027b71b2fbdecd045121a6b2caa$var$removeListener","$c9e36027b71b2fbdecd045121a6b2caa$var$createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","$c9e36027b71b2fbdecd045121a6b2caa$var$createDetachObserver","removedNodes","$c9e36027b71b2fbdecd045121a6b2caa$var$drpListeningCharts","$c9e36027b71b2fbdecd045121a6b2caa$var$oldDevicePixelRatio","$c9e36027b71b2fbdecd045121a6b2caa$var$onWindowResize","dpr","$c9e36027b71b2fbdecd045121a6b2caa$var$createResizeObserver","ResizeObserver","contentRect","$c9e36027b71b2fbdecd045121a6b2caa$var$listenDevicePixelRatioChanges","$c9e36027b71b2fbdecd045121a6b2caa$var$releaseObserver","disconnect","$c9e36027b71b2fbdecd045121a6b2caa$var$unlistenDevicePixelRatioChanges","$c9e36027b71b2fbdecd045121a6b2caa$var$createProxyAndListen","$c9e36027b71b2fbdecd045121a6b2caa$var$fromNativeEvent","$c9e36027b71b2fbdecd045121a6b2caa$var$addListener","$c9e36027b71b2fbdecd045121a6b2caa$export$DomPlatform","renderHeight","getAttribute","renderWidth","$c9e36027b71b2fbdecd045121a6b2caa$var$EXPANDO_KEY","initial","displayWidth","displayHeight","$c9e36027b71b2fbdecd045121a6b2caa$var$initCanvas","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","$c9e36027b71b2fbdecd045121a6b2caa$export$Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","$c9e36027b71b2fbdecd045121a6b2caa$var$formatters","numeric","tickValue","notation","delta","maxTick","$c9e36027b71b2fbdecd045121a6b2caa$var$calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","$c9e36027b71b2fbdecd045121a6b2caa$export$Ticks","formatters","$c9e36027b71b2fbdecd045121a6b2caa$var$autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","$c9e36027b71b2fbdecd045121a6b2caa$var$determineMaxTicks","majorIndices","major","enabled","$c9e36027b71b2fbdecd045121a6b2caa$var$getMajorIndices","numMajorIndices","first","newTicks","ceil","$c9e36027b71b2fbdecd045121a6b2caa$var$skipMajors","evenMajorSpacing","$c9e36027b71b2fbdecd045121a6b2caa$var$getEvenSpacing","factors","$c9e36027b71b2fbdecd045121a6b2caa$var$calculateSpacing","avgMajorSpacing","$c9e36027b71b2fbdecd045121a6b2caa$var$skip","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","crossAlign","$c9e36027b71b2fbdecd045121a6b2caa$var$offsetFromEdge","edge","$c9e36027b71b2fbdecd045121a6b2caa$var$sample","numItems","increment","$c9e36027b71b2fbdecd045121a6b2caa$var$getPixelForGridLine","offsetGridLines","validIndex","lineValue","$c9e36027b71b2fbdecd045121a6b2caa$var$getTickMarkLength","$c9e36027b71b2fbdecd045121a6b2caa$var$getTitleHeight","$c9e36027b71b2fbdecd045121a6b2caa$var$titleAlign","$c9e36027b71b2fbdecd045121a6b2caa$var$reverseAlign","$c9e36027b71b2fbdecd045121a6b2caa$export$Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","$c9e36027b71b2fbdecd045121a6b2caa$var$garbageCollect","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","$c9e36027b71b2fbdecd045121a6b2caa$var$createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","$c9e36027b71b2fbdecd045121a6b2caa$var$titleArgs","tz","gz","axisID","$c9e36027b71b2fbdecd045121a6b2caa$var$TypedRegistry","isForType","isPrototypeOf","register","parentScope","$c9e36027b71b2fbdecd045121a6b2caa$var$isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","$c9e36027b71b2fbdecd045121a6b2caa$var$routeDefaults","$c9e36027b71b2fbdecd045121a6b2caa$var$registerDefaults","unregister","$c9e36027b71b2fbdecd045121a6b2caa$export$registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","$c9e36027b71b2fbdecd045121a6b2caa$var$PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","$c9e36027b71b2fbdecd045121a6b2caa$var$allPlugins","$c9e36027b71b2fbdecd045121a6b2caa$var$getOpts","$c9e36027b71b2fbdecd045121a6b2caa$var$pluginOpts","$c9e36027b71b2fbdecd045121a6b2caa$var$createDescriptors","previousDescriptors","some","pluginScopeKeys","$c9e36027b71b2fbdecd045121a6b2caa$var$getIndexAxis","datasetDefaults","$c9e36027b71b2fbdecd045121a6b2caa$var$determineAxis","scaleOptions","$c9e36027b71b2fbdecd045121a6b2caa$var$initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","$c9e36027b71b2fbdecd045121a6b2caa$var$getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","$c9e36027b71b2fbdecd045121a6b2caa$var$getAxisFromDefaultScaleID","$c9e36027b71b2fbdecd045121a6b2caa$var$mergeScaleConfig","$c9e36027b71b2fbdecd045121a6b2caa$var$initData","$c9e36027b71b2fbdecd045121a6b2caa$var$keyCache","$c9e36027b71b2fbdecd045121a6b2caa$var$keysCached","$c9e36027b71b2fbdecd045121a6b2caa$var$cachedKeys","generate","$c9e36027b71b2fbdecd045121a6b2caa$var$addIfFound","$c9e36027b71b2fbdecd045121a6b2caa$var$Config","_config","$c9e36027b71b2fbdecd045121a6b2caa$var$initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","$c9e36027b71b2fbdecd045121a6b2caa$var$getResolver","$c9e36027b71b2fbdecd045121a6b2caa$var$needContext","resolverCache","$c9e36027b71b2fbdecd045121a6b2caa$var$KNOWN_POSITIONS","$c9e36027b71b2fbdecd045121a6b2caa$var$positionIsHorizontal","$c9e36027b71b2fbdecd045121a6b2caa$var$compare2Level","l1","l2","$c9e36027b71b2fbdecd045121a6b2caa$var$onAnimationsComplete","animationOptions","onComplete","$c9e36027b71b2fbdecd045121a6b2caa$var$onAnimationProgress","onProgress","$c9e36027b71b2fbdecd045121a6b2caa$var$isDomSupported","$c9e36027b71b2fbdecd045121a6b2caa$var$getCanvas","getElementById","$c9e36027b71b2fbdecd045121a6b2caa$var$instances","$c9e36027b71b2fbdecd045121a6b2caa$var$getChart","$c9e36027b71b2fbdecd045121a6b2caa$export$Chart","initialCanvas","existingChart","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","resizeDelay","_initialize","error","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","oldRatio","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasetIndex","oldIndex","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","unbindEvents","toBase64Image","toDataURL","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","$c9e36027b71b2fbdecd045121a6b2caa$var$invalidatePlugins","instances","$c9e36027b71b2fbdecd045121a6b2caa$var$enumerable","$c9e36027b71b2fbdecd045121a6b2caa$var$clipArc","pixelMargin","angleMargin","$c9e36027b71b2fbdecd045121a6b2caa$var$parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","$c9e36027b71b2fbdecd045121a6b2caa$var$rThetaToXY","theta","$c9e36027b71b2fbdecd045121a6b2caa$var$pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","$c9e36027b71b2fbdecd045121a6b2caa$var$drawBorder","inner","lineJoin","fullCircles","$c9e36027b71b2fbdecd045121a6b2caa$var$drawFullCircleBorders","version","getChart","$c9e36027b71b2fbdecd045121a6b2caa$export$ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","halfAngle","halfRadius","$c9e36027b71b2fbdecd045121a6b2caa$var$drawArc","$c9e36027b71b2fbdecd045121a6b2caa$var$setStyle","lineCap","$c9e36027b71b2fbdecd045121a6b2caa$var$lineTo","$c9e36027b71b2fbdecd045121a6b2caa$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","$c9e36027b71b2fbdecd045121a6b2caa$var$pathSegment","lineMethod","stepped","$c9e36027b71b2fbdecd045121a6b2caa$var$getLineMethod","$c9e36027b71b2fbdecd045121a6b2caa$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$c9e36027b71b2fbdecd045121a6b2caa$var$_getSegmentMethod","$c9e36027b71b2fbdecd045121a6b2caa$var$usePath2D","Path2D","$c9e36027b71b2fbdecd045121a6b2caa$var$draw","path","_path","$c9e36027b71b2fbdecd045121a6b2caa$var$strokePathWithCache","segmentMethod","$c9e36027b71b2fbdecd045121a6b2caa$var$strokePathDirect","$c9e36027b71b2fbdecd045121a6b2caa$export$LineElement","_points","_segments","_pointsUpdated","$19e5c0283579a9e3a6329f6c199b265e$var$findStartAndEnd","$19e5c0283579a9e3a6329f6c199b265e$var$solidSegments","interpolate","_interpolate","$c9e36027b71b2fbdecd045121a6b2caa$var$_getInterpolationMethod","interpolated","pathSegment","$c9e36027b71b2fbdecd045121a6b2caa$var$inRange$1","hitRadius","$c9e36027b71b2fbdecd045121a6b2caa$export$PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","$c9e36027b71b2fbdecd045121a6b2caa$var$getBarBounds","bar","half","$c9e36027b71b2fbdecd045121a6b2caa$var$parseBorderSkipped","borderSkipped","$c9e36027b71b2fbdecd045121a6b2caa$var$parseEdge","orig","v2","$c9e36027b71b2fbdecd045121a6b2caa$var$startEnd","$c9e36027b71b2fbdecd045121a6b2caa$var$skipOrLimit","$c9e36027b71b2fbdecd045121a6b2caa$var$boundingRects","maxW","maxH","$c9e36027b71b2fbdecd045121a6b2caa$var$parseBorderWidth","maxR","$c9e36027b71b2fbdecd045121a6b2caa$var$parseBorderRadius","outer","$c9e36027b71b2fbdecd045121a6b2caa$var$inRange","skipX","skipY","$c9e36027b71b2fbdecd045121a6b2caa$var$addNormalRectPath","$c9e36027b71b2fbdecd045121a6b2caa$export$BarElement","addRectPath","$c9e36027b71b2fbdecd045121a6b2caa$var$positioners","average","eventPosition","nearestElement","tp","$c9e36027b71b2fbdecd045121a6b2caa$var$pushOrConcat","toPush","$c9e36027b71b2fbdecd045121a6b2caa$var$splitNewlines","String","$c9e36027b71b2fbdecd045121a6b2caa$var$createTooltipItem","$c9e36027b71b2fbdecd045121a6b2caa$var$getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$c9e36027b71b2fbdecd045121a6b2caa$var$determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","$c9e36027b71b2fbdecd045121a6b2caa$var$doesNotFitWithAlign","$c9e36027b71b2fbdecd045121a6b2caa$var$determineAlignment","$c9e36027b71b2fbdecd045121a6b2caa$var$determineYAlign","$c9e36027b71b2fbdecd045121a6b2caa$var$getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","$c9e36027b71b2fbdecd045121a6b2caa$var$alignX","$c9e36027b71b2fbdecd045121a6b2caa$var$alignY","$c9e36027b71b2fbdecd045121a6b2caa$var$getAlignedX","$c9e36027b71b2fbdecd045121a6b2caa$var$getBeforeAfterBodyLines","$c9e36027b71b2fbdecd045121a6b2caa$var$overrideCallbacks","$c9e36027b71b2fbdecd045121a6b2caa$var$Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleAlign","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","handleEvent","positioners","$c9e36027b71b2fbdecd045121a6b2caa$var$findOrAddLabel","$c9e36027b71b2fbdecd045121a6b2caa$var$addIfString","lastIndexOf","$c9e36027b71b2fbdecd045121a6b2caa$export$CategoryScale","_startValue","_valueRange","$c9e36027b71b2fbdecd045121a6b2caa$var$validIndex","$c9e36027b71b2fbdecd045121a6b2caa$var$generateTicks$1","generationOptions","dataRange","step","precision","maxTicks","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","$c9e36027b71b2fbdecd045121a6b2caa$var$LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","$c9e36027b71b2fbdecd045121a6b2caa$export$LinearScale","$c9e36027b71b2fbdecd045121a6b2caa$var$isMajor","tickVal","$c9e36027b71b2fbdecd045121a6b2caa$export$LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","$c9e36027b71b2fbdecd045121a6b2caa$var$generateTicks","$c9e36027b71b2fbdecd045121a6b2caa$var$getTickBackdropHeight","backdropPadding","$c9e36027b71b2fbdecd045121a6b2caa$var$determineLimits","$c9e36027b71b2fbdecd045121a6b2caa$var$getTextAlignForAngle","$c9e36027b71b2fbdecd045121a6b2caa$var$adjustPointPositionForLabelHeight","textSize","$c9e36027b71b2fbdecd045121a6b2caa$var$pathRadiusLine","labelCount","getPointPosition","$c9e36027b71b2fbdecd045121a6b2caa$var$numberOrZero","param","$c9e36027b71b2fbdecd045121a6b2caa$export$RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","$c9e36027b71b2fbdecd045121a6b2caa$var$fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropColor","$c9e36027b71b2fbdecd045121a6b2caa$var$drawPointLabels","gridLineOpts","$c9e36027b71b2fbdecd045121a6b2caa$var$drawRadiusLine","showLabelBackdrop","animate","angleLines.color","pointLabels.color","ticks.color","$c9e36027b71b2fbdecd045121a6b2caa$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","$c9e36027b71b2fbdecd045121a6b2caa$var$UNITS","$c9e36027b71b2fbdecd045121a6b2caa$var$sorter","$c9e36027b71b2fbdecd045121a6b2caa$var$parse","adapter","_adapter","time","parser","isoWeekday","$c9e36027b71b2fbdecd045121a6b2caa$var$determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","$c9e36027b71b2fbdecd045121a6b2caa$var$addTick","timestamps","$c9e36027b71b2fbdecd045121a6b2caa$var$ticksFromTimestamps","majorUnit","$c9e36027b71b2fbdecd045121a6b2caa$var$setMajorTicks","$c9e36027b71b2fbdecd045121a6b2caa$export$TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","$c9e36027b71b2fbdecd045121a6b2caa$var$determineUnitForFormatting","$c9e36027b71b2fbdecd045121a6b2caa$var$determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","$c9e36027b71b2fbdecd045121a6b2caa$var$interpolate","prevSource","nextSource","prevTarget","nextTarget","span","$c9e36027b71b2fbdecd045121a6b2caa$export$TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","$66eaaf6a6fd70a36e232e3530bc13943$var$t","$66eaaf6a6fd70a36e232e3530bc13943$export$rk4","u","$66eaaf6a6fd70a36e232e3530bc13943$export$BoxModel","stocks","flows","variables","constants","integrator","ensureUniqueIds","idToIdx","createIdToIdxMap","evaluateGraph","formula","step3","step4","stepImpl","in","out","stepExt","stepExt3","stepExt4","$3393b032f0f02a222b8fe1ca616fe1b4$export$default","$3393b032f0f02a222b8fe1ca616fe1b4$var$stocks","initialValue","$3393b032f0f02a222b8fe1ca616fe1b4$var$variables","$3393b032f0f02a222b8fe1ca616fe1b4$var$constants","$3393b032f0f02a222b8fe1ca616fe1b4$var$flows","$8c1b53e56b544b326f87b931dee8d96b$var$numRecords","$8c1b53e56b544b326f87b931dee8d96b$var$chartData","_","$8c1b53e56b544b326f87b931dee8d96b$var$chartConfig","$8c1b53e56b544b326f87b931dee8d96b$var$elem","$8c1b53e56b544b326f87b931dee8d96b$var$planetHeatContentChart","$8c1b53e56b544b326f87b931dee8d96b$var$planetHeadContentIdx","_ref","$8c1b53e56b544b326f87b931dee8d96b$var$boxModel","$8c1b53e56b544b326f87b931dee8d96b$var$initialStocks","_ref2","$8c1b53e56b544b326f87b931dee8d96b$var$lastRecord","$8c1b53e56b544b326f87b931dee8d96b$var$t","$8c1b53e56b544b326f87b931dee8d96b$var$requestAnimationFrameId","$8c1b53e56b544b326f87b931dee8d96b$var$animate","$8c1b53e56b544b326f87b931dee8d96b$var$addRecords","cancelAnimationFrame","$8c1b53e56b544b326f87b931dee8d96b$var$sliderContainerElem","constant","createElement","titleSpan","innerText","appendChild","slider","append","valueSpan","$8c1b53e56b544b326f87b931dee8d96b$var$addSlider","$8c1b53e56b544b326f87b931dee8d96b$var$startButton","$8c1b53e56b544b326f87b931dee8d96b$var$stopButton"],"version":3,"file":"index.43f4f252.js.map"}